
I was intrigued to see the news last week that IBM is divesting itself of the Salary.com compensation data business, which it acquired when it bought SaaS HR company Kenexa in 2012.
With an awoved strategy that hails data as the “new natural resource” of the 21st century, it’s only a few months since IBM bought The Weather Company’s huge data resources. How, then, does IBM conclude that Salary.com’s compensation data activities constitute “non-core, non-strategic areas within our business,” as its spokesperson told the media last week? Exactly why is IBM selling Salary.com?
What can you do with raw data?
I don’t have an inside track on this, but I suspect that the answer has a lot to do with the difference between raw data and what you can do with it. And if I’m right, then I’m ready to salute IBM for having an astute strategy in place.
Ever since Tim O’Reilly declared in his 2005 Web 2.0 manifesto that “data is the next Intel Inside,” I’ve had misgivings about putting too much faith in the value of raw data alone. O’Reilly’s contention was that, just as having an Intel-branded microprocessor at the heart of a personal computer had become more important than whose brandname was on the computer itself (NB: he was writing before Apple’s resurgence), then owning the data was much more important than owning the applications or APIs that sat on top of it:
We expect to see battles between data suppliers and application vendors in the next few years, as both realize just how important certain classes of data will become as building blocks for Web 2.0 applications.
The race is on to own certain classes of core data: location, identity, calendaring of public events, product identifiers and namespaces. In many cases, where there is significant cost to create the data, there may be an opportunity for an Intel Inside style play, with a single source for the data. In others, the winner will be the company that first reaches critical mass via user aggregation, and turns that aggregated data into a system service.
My view at the time was that this was a misleading analogy:
It’s a bit like saying, ‘Bits were the Intel Inside of the PC.’ They weren’t actually, it was how they were processed that made Intel the platform of choice. Similarly, it’s not the data itself, it’s what you do with it that counts in the Web 2.0 era … Value comes from the views that you create to filter, join and represent data — whether it’s your data or someone else’s (more often the latter).
Or as I’d said more succinctly a couple of years earlier:
Tim O’Reilly says that what will matter then is ‘Who will own the data?’ but I think that much of the data will be floating about for free, and the really important question is not going to be the data itself but how you view it. In short: Who will own the context?
My diginomica colleague Den Howlett later echoed this sentiment in his Weekend rant: big data is a bad joke, gimme context.
Watson adds the context
IBM of course has one of the world’s leading context-adding engines in the shape of its Watson cognitive computing resource. I suspect this is the reason why Salary.com no longer offers any value in IBM’s scheme of things. The data it amasses is readily available from several sources and IBM may well have come to the conclusion that the data it deals in is becoming a low-value commodity. Far better to buy in that data at commodity prices and then add value by applying Watson’s analytics smarts.
This is consistent with the strategy IBM has already adopted for Watson in relation to Internet of Things data, where as diginomica’s Martin Banks reported just before Christmas:
The company is not pitching to compete directly with the likes of GE Software and Hitachi Data Systems in the business of managing industrial or civil systems. Instead it is targeting the complementary role of cognitively processing the vast amounts of data IoT systems produce and infer actions and solutions that need to be made by users in a timely fashion.
But in that case, why buy The Weather Company? Well, if you’re going to own a primary source of raw data, it probably just makes more sense to own one of the biggest on the planet. This is a data lake (and a set of fast-flowing data streams that constantly feed it) which provides plenty of fodder for developing and refining algorithms for spotting and harnessing trends and patterns in raw data.
But more importantly, weather data is crucial for adding environmental context to sensor data coming in from numerous IoT devices. It’s a core component in providing the context that makes sense of that data, and therefore contributes to the value Watson is able to add.
My take
The moral of this story is to think carefully before assuming that a large volume of data is inherently useful. Human beings are natural hoarders but not everything you keep is going to come in useful. As IBM’s VP of digital transformation, Vijay Vijayasankar, told diginomica’s Jon Reed a few months ago, it’s the outcome, not the data, that matters:
My favorite example is: I can create an IT system that will tell you in real time if inventory needs to be moved from Texas to California, but knowing that you will make profit is only one part of this equation.
You also need to tie together everything else. Do you have people, do you have trucks ready to move this inventory? Otherwise, what do you do with this knowledge? It’s useless. You’ll spend a billion dollars creating real-time systems for everybody, but if you can’t really have the business process to go with it, you might as well save the money.
In fairness to Tim O’Reilly, I have a feeling that what he meant by “owning the data” was more nuanced than how it came out. More than simply having legal title, I think he meant ‘owning’ to mean having some contextual insight into the data.
And as we move into an increasingly connected digital world, having that contextual insight is one of the keys to innovation and competitive edge.
Image credit: Model figures with coins on trolley © beeboys – Fotolia.com.
Read more on: Analytics planning and data analysisHCM and the digital future of work 