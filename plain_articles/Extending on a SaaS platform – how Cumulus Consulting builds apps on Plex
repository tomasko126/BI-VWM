
Cumulus Consulting’s Craig Scott at PowerPlex ’17
One of my bones of contention about SaaS is that it should not be inflexible when it comes to differentiating features. That’s why I’m always eager to learn about platforms and extensibility.
At PowerPlex 2017, I discussed those issues with Plex CEO Jason Blessing (Blessing on Plex’s numbers as cloud manufacturing hits a tipping point).
On the show floor, I tracked down the guys from Cumulus Consulting, the company that has probably built the most add-on apps on Plex for customers. The burning question: has platform building helped them with customers? Have they been able to stand out from other partners who don’t have internal app competencies? During a chat with Cumulus Consulting co-founder Craig Scott, I got the skinny.
Building an app platform with Plex
It’s easy to understand why Plex trusts Cumulus Consulting with access to their platform: both Scott and his co-founder Jason Delozier are former Plex employees. While at Plex, they earned their chops supporting some of Plex’s largest deployments. As Scott said to me:
Most of our team is former Plex people. We have eight developers that formerly work at Plex. We’ve got twenty implementers, most of which used to work there. We have more Plex application knowledge than anybody else outside of Plex’s four walls.
So why did Scott and team dive into Plex app development? Turns out they had prior exposure to the SaaS marketplace concept:
We have some experience implementing other cloud-based products. We’re familiar with what options they have, in terms of marketplaces where you can add functionality.
During my backchannel chats at the show, I learned that in the early years, Plex would build customizations from customers into the product. It made sense to stop that approach, but as Scott explained, it also created an apps opportunity for Cumulus:
We knew this was something that Plex customers really were yearning for because customer funded development has gone away.
But there was a catch: Plex didn’t have an obvious way to extend or build apps. As of now, there isn’t an SDK. APIs are growing, but still modest. Scott:“We sat down, and we got creative.” Cumulus decided to build their own platform on top of Plex, where they could extend customer functionality. The question was: how to deliver these apps to customers? All roads led to a web browser:
From a cloud perspective, you’re limited to what you can do within a web browser… We looked at some statistics, and realized that Chrome is the number one browser in the world. We thought “Well, if we’re going to put our eggs in a basket, let’s follow that one.”
Chrome already has a built-in model for extensions:
Chrome has extensions, add-ins if you will. That’s the direction that we’ve gone. What’s nice is that it’s contextual, it’s within Plex; it doesn’t come across as a third party application. It feels very native.
So how did Plex respond?
After about six months, when customers started raving about how awesome it was, we sat down and had a technical discussion with Plex about concerns, challenges, risks, and all that kind of stuff.
It’s just over a year since Cumulus Consulting launched their first Plex app. And what about that first one? That was built for an existing Plex customer:
This customer had some challenges with the some of the current Plex functionality… What we came up with was basically an easy button for this customer to be able to record their production, because they had a process that was very quick. Operators were filling parts up very quickly, so we gave them a little button, and they hit it – it saved them four or five mouse clicks for every transaction.
The results paid off:
They were able to improve their efficiencies, get more parts out the door with less errors, because you’re not relying on the operator to click the mouse or click on the right button. They’ve got just one point of entry, so it just streamlined their process.
The danger with these kinds of projects is getting caught up in one-off extensions for customers. That doesn’t built an apps ecosystem. But Cumulus was thinking re-usability from the get-go. They sell apps on a subscription model, with regular updates:
Everything that we develop on our apps is intended to be re-usable. We make our stuff configurable, just like Plex is, so we have our own set of configuration settings within our plug-in. There’s some flexibility there.
That means other subscribers “inherit” new functionality as features are added. But has it helped Cumulus win business? Short answer: yes.
Some of our applications have actually been used specifically to close Plex deals – at least three or four that I’m aware of.
Scott said that some Plex salespeople have used the apps as a selling point as well. What about prospect reactions?
They’re buying an ERP, it’s an expensive endeavor. Their biggest fear is that they’re going to get six months into this, and realize that the system’s incapable of doing what they need. We’ve got the confidence to sit there and say, “Yes, if it’s not there, we’ll build it.”
To date, Cumulus Consulting has built about twenty Plex apps, using Java and C#. They pull Plex data via stored procedures – no APIs or web services needed. They can build an app in as little as a day or two, depending on the complexity; it might take a month for a more sophisticated app.
At PowerPlex 2017, Cumulus had a demo running of one of their apps, a three dimensional truck cubing application. Cumulus Consulting also built an app for use with Mexican customers that enables Mexican government invoicing. Scott says that’s helped Plex sell deals in Mexico. Another Cumulus app allows Plex customers to ship natively with UPS or FedEx from within Plex.
The wrap – “This is where Plex needs to go”
Apps and extensions are not a cure-all. I like SaaS partners that do both implementation and development –  they can advise customers on when to extend, and when to conform to standard configurations. Apps/extensions should be for truly differentiating functionality, usually with an industry nuance. Scott told me his team works with customers to decide when to conform to the configuration options. In Scott’s words, you build apps when:
If a customer would typically have to go purchase another piece of software to accomplish this task, then we want to build that in Plex.
Based on my conversations with Plex CEO Jason Blessing, I do believe Plex will open up its platform in the future. That bodes well for the ecosystem, but is Cumulus worried about the fate of the platform they built in the long run? No, Scott says, for two reasons: first, they have close relationships inside of Plex and are up to date on technical issues. Second, because their apps are already compatible with Plex UX, Plex’s important new UX/platform effort.
Cumulus is also knee deep in mobile apps, custom-built for IoS and Android (count Scott amongst the believers in device-specific app design to leverage device features, from voice to fingerprinting).
The Cumulus Consulting approach of combining consulting and app building is a model many services firms have yet to embrace. Although Cumulus is building specifically for Plex now, their adherence to industry standards gives them a lot of flexibility in the future. That’s the kind of model I wish more services firms would pursue. I’ll be watching to see if more firms like Cumulus emerge in the Plex world. I wouldn’t bet against it.
Updated with minor tweaks for readability, 8am UK time June 3.
Image credit - Photos at PowerPlex 2017 by Jon Reed. Disclosure - Plex is a diginomica premier partner, and paid the bulk of my expenses to attend PowerPlex 2017. Read more on: Cloud ERP financials and supply chainCloud platforms - infrastructure and architectureMobileUX and application design 