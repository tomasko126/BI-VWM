
I’ve just finished reading Stephen O’Grady’s The Software Paradox – the Rise and Fall of Commercial Software (link is to Kindle edition.) It’s a thought provoking read that, while skewed in favor of the author’s chosen theme of developers as the new kingmakers, has plenty to recommend it.
The book charts how perpetual license revenue at companies like IBM, Microsoft and Oracle grew in the 1980’s and continued through to the early 2000’s. O’Grady calculates that somewhere in the 2004-5 timeframe, the wheels started falling off and that what we see now is a gradual but irreversible decline in the way access to software is provided.
Drifting to zero
His thesis is that even while software has clear value, its commercial value as a stand-alone object is falling to zero. Instead, he argues that software is acting as an enabler that opens up new markets. Those same markets are an order of magnitude larger than that which went before. It’s the ‘software eats the world‘ argument with which followers of Marc Andreessen will be familiar.
O’Grady attributes this to three main factors:

The rise of open source software and the opportunities that presents for developers to build out replacement solutions and entirely new classes of product at a fraction of the cost of proprietary softwares
The emergence of ‘as a Service’ models and
The harnessing of ‘waste’ in the form of data produced each time a system is touched.

The list of causal factors will be familiar to regular readers. In compiling his assessment, O’Grady draws heavily on analyzes from long-term clients like IBM and Microsoft as well as providing a detailed analysis of Oracle’s results. It’s all good fodder for the thesis.
Not a zero sum game
It is worthwhile pointing out that O’Grady is NOT proposing a zero sum game argument. As he says in a recent explanatory story:
One of the most common misinterpretations of the Software Paradox to date has been the assertion that traditional software license models are a binary, on or off switch. Many who read the book, or at least the title, come away with the impression that it’s arguing that it is impossible to generate revenue from software today. This is not, in fact, the argument being made. Not least because it’s very difficult to build the case that you can’t generate money from traditional software licensing when one company alone is generating double-digit billions of dollars in revenue from the sale of what is effectively two software products.
But more problematically, this simplistic interpretation obscures the reality that it remains very possible to generate revenue with software, it’s simply that the economic model for its monetization is evolving.
O’Grady is right up to a point, but then James Dixon talks to the cost of revenue acquisition, identifying an ‘extreme case’:
Oracle’s sales and marketing departments were allowed to spend up to 115% of the new license revenue. Oracle was losing money just to acquire customers. In the latest Oracle quarterly report they state that new license revenue was $1,982 million and sales and marketing expenses was $1,839 million. So 92% of your license fee goes towards the sales and marketing expenses needed to get you to buy the software, and the remaining 8% doesn’t even come close to covering the rest.
Dixon is also correct but avoids the point many – including myself – make. The on-premises vendors may be struggling to make traditional sales numbers, and it may be costing a large proportion of revenue to make those sales, but it is no better for the aaS providers. If anything it is much worse. The saving grace for the aaS and open source based vendors is that the market is happy to reward stellar growth, provided that growth is not at the expense of cash.
We can review the litany of arguments about non-GAAP earnings, stock compensation plans and interest rate impact. We can conflate those arguments to be the equivalent of the dreaded Ponzi scheme, but it doesn’t change how the markets are operating.
Get out of jail?
Regardless, O’Grady’s argument is well made and his suggested solutions also make sense although they can be critiqued.
Assume the paradox is true. Acceptance is tough for some companies because, as O’Grady eloquently states:
More problematically, the more successful their history of generating software revenue, the more difficulty they have in envisioning challenges to it moving forward
I put it another way: glittering success is the enemy of change.
Identify and pursue value. This is obvious but is much harder to articulate when the software you’ve developed for sale is general purpose and not, for example, vertically focused or, has limited vertical market functionality. What’s more, while ‘as a Service’ is frequently conflated to mean public cloud solutions, we see plenty of examples where managed services are the norm. In the emerging fields of so-called ‘big data’ and streaming data, we find little appetite for  ‘as a Service’ offerings. This is because companies view data as a gold mine they’d prefer not to have hosted in a shared environment.
Diversify the business. O’Grady cites Microsoft’s massive investments in the Azure cloud, even while its flagship Office and Windows franchise were doing very well. He argues that Microsoft saw the change coming and used its flagship generated profits to diversify away from a model he presumes Microsoft saw as at long term risk. I tend to a different point of view. Despite the many examples Google puts forward for its cloud-based office alternatives, Office ubiquity has not changed. Instead, the world has moved more decisively towards browser based applications. It, therefore, makes sense for Microsoft to shift the business model to reflect that reality. As a side effect – or maybe this was the intent all along – Microsoft benefits from the ability to build additional relationships that were not previously available. Witness the bromance between Microsoft and Salesforce.
You’re out of jail – now what?
O’Grady’s strategic remedies only work if you can sweat the details. Reviewing the details show where his arguments start to get a tad flaky. He argues for instance that transitioning to offering software via a subscription model should be organizationally straightforward. That’s not true.
The sales compensation model for upfront licensing is not easily switched to reflect subscription pricing models without a significant impact on the bottom line. What happens to compensation when the sales person is used to picking up $60,000 on a $1 million license deal that is now pitched at $440,000 pa for five years including the all important support and maintenance for which he wasn’t compensated in the past?
Another O’Grady argument postulates that R&D plus infrastructure costs for Software as a Service should be a lot lower than they are in the on-premises world. You would think that intuitively makes sense except that isn’t how it is working out today. Salesforce, the poster child for SaaS, is recording R&D at around 14% of revenue after 16 years of existence, while Workday is spending a whopping 40% after 10 years in development.
Workday has publicly stated that it makes extensive use of open source, which gives it some cost savings that can be passed onto the pricing model. That is an advantage. But in my view, it is far from clear whether the availability of open source provides the kind of cost advantages O’Grady suggests. If everyone benefits from open source then where is the advantage in the SaaS model? I don’t see it.
I am far more persuaded by the argument that open source provides the opportunity to develop a rich pool of technical expertise from which everyone benefits. You can see that from excitement in the Red Hat community. The question then comes, can the ‘old lags’ in the on-premises world attract that talent? It doesn’t seem likely when anecdotal evidence suggests that fresh talent wants to work first with Facebook, Google, and Apple.
My take
As I said at the top of this story, O’Grady’s arguments are well made but they are incomplete, and the remedies he suggests are far from straightforward. As we have seen time and again, pivoting a successful business model to one that, on its face, is far less attractive, makes for a difficult boardroom head scratcher. Vested interests can make for intractable obstacles, and organizational change is never easy.
Regardless, the world is moving towards one where services dominate and where asset acquisition in the form of perpetual licenses is fading. What we cannot know is which vendors will successfully manage the transition. History teaches that precious few vendors make it through these kinds of tectonic shift, the stand out example being IBM (and possibly Siemens.) That is the real dilemma for anyone placing their buying bets on vendors that are predominantly perpetual license model based. Unless of course those same vendors are meeting a current and future need with software that is viewed as an asset.
Disclosure: Workday and Salesforce are premier partners at time of writing.
Read more on: DevOps NoSQL and the open source stackThe new professional and IT as a service 