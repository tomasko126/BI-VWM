
More and more people are asking the question my colleague Jon Reed posed in a recent write-up of a panel discussion at Consensus 2016 — Is the blockchain enterprise-ready?. Or to be more precise, many of us are puzzling over what role blockchain may play in the enterprise. The yes/no decision is a sideshow really — if that role is important enough to the business, then making it enterprise-ready is just a technical formality. Resources will be found and it will be made to happen.
The panelists suggested three questions as enterprise starting points for thinking about blockchain’s role:


What processes are bogged down by intermediaries and third parties for validations and approvals?
What would you do with technology that supports immutable, time stamped, and largely tamper-proof data?
Are there areas in your business with a rising cost of auditing and compliance?


To my mind, there’s one answer that leaps out shouting at me from those three starting points: data that has to be shared (and trusted) across multiple parties. One panelist, Victor Wong, CEO of BlockApps, calls out the key pain point crying out for a remedy — the “massive burden” of database co-ordination.
It turns out that the notion of using blockchain as a trusted repository of shared master data is one that’s been floating around for a while — and the low-hanging fruit of greatest need is in transactions where trust and compliance are paramount. More on that later, but first, it’s worth spending a bit more time exploring why blockchain is potentially so well suited.
Distributed ledger or log?
Blockchain is often described as distributed ledger technology, which reflects its origins as the foundation of the Bitcoin digital currency, but which may constrain us to think too narrowly about where it can be useful. A helpful alternative definition crops up in an essay posted 18 months ago, From Space, to Time, in which Superfeedr founder Julien Genestoux explores the growing importance of temporal rather than spatial context in the web environment:
The Blockchain may actually be the most fascinating of these examples. It’s not so much a shared ledger than it is a shared transaction log. State and consistency are determined by history and let us build applications. When authority was space-based (where is the master server), it’s now time-based (what are the transactions that lead us to this state).
Simply calling blockchain a log rather than a ledger helps focus our minds on its recording of transactions as part of a time series. What we call things matters a lot. Time has always been there in the Web’s data, but in the beginning we were not very good at seeing it, or making use of it. We were, as Genestoux points out, constrained by incomplete metaphors of the Web as a physical topology of destinations where people published static information. It’s only as the technology has evolved and become better at exposing the temporal context that we’ve migrated towards thinking in terms of timelines, social streams, notifications and all the other time-series artefacts that he mentions.
Similarly, time has always been there in the enterprise — but our processes have not made use of it because we didn’t have the technology to expose it. Enterprise metaphors are grounded in paper-based processes, and therefore transactions have been embodied in the documents that stakeholders pass around to each other. They may have been dated, but it was not until the documents were digitized that we could timestamp them with serial metadata about their history. And because we’ve never given much thought to the time-series context, we’ve not done this in a shareable way.
Shared data language
The result, as panelists at Consensus 2016 explained, is enterprise processes that add “T+” delays while participants re-verify the same information over and again. David Johnston, Chairman of the Board at Factom Foundation, cited mortgage issuers as an example:
A lot of these financial institutions have dozens of different systems of record, different databases that don’t talk to each other, that don’t trust each other.
The distrust occurs not only between separate institutions, but also between different functions within the same organization. No one trusts anybody else’s data, which gives rise to huge master data management (MDM) projects that attempt to define a ‘single source of the truth’. Even when they succeed in establishing a central datastore that everyone relies on, there’s still a lot of effort required to keep it in sync with other data stores scattered throughout the enterprise.
This is where blockchain introduces a further difference compared to conventional MDM systems that helps overcome these barriers. As integration consultant Benedikt Herudek explains in a white paper published late last year by Service Technology Magazine, this could prove to be the blockchain’s ‘killer usecase’:
Blockchain is not only Master of the Data, but … it also controls the language used to communicate between endpoints …
MDM as known does achieve having one set of data, that represents a single source of truth. It does not, per design, solve the issue of having different languages for the same thing, which need to be translated into each other: ‘Unified Data: yes. Unified Language: No’.
Blockchain Technology enforces not only one common set of data, it also enforces the nomenclature, one language for all concepts. Wallets plug in to the Blockchain and either speak ‘Blockchainish’ or they can’t connect. There is no choice and no room for application specific dialects.
In  other words, getting everyone to agree to log their data in a shared blockchain also forces them to use the blockchain’s standardized way of representing that data. Instead of keeping separate sets of data definitions in each individual CRM, finance and order processing application that the system has to translate between, the blockchain externalizes the data definitions into a single, shared transaction log.
My take
This is typical of the kind of quid-pro-quo that successful networked systems always offer. ‘Give up your proprietary protocols and substitute my simpler alternative. You’ll have to change the way you manage certain things that are important to you, but you’ll gain much more through wider, more flexible connectivity.’ In the Web, it’s already worked for TCP/IP, for HTTP, for REST, and many more examples. Of course, each of these were initially resisted by people who felt they were too simple to meet enterprise needs. But ultimately their ease of connectivity triumphed.
For blockchain, the obstacles are issues such as confidentiality and regulatory compliance. But connectivity is becoming such an imperative of modern business that there’s a real incentive to overcome those obstacles. People and businesses increasingly need to collaborate in real-time and they need to be able to do so using shared, trusted data sources. If blockchain’ s distributed transaction logs can provide that trusted resource then it will have huge value to every kind of enterprise.
Image credit - Via codesign-it.com under Creative Commons AttributionRead more on: Cloud platforms - infrastructure and architectureFintech 