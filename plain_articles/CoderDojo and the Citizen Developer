
Mary Maloney
The issues surrounding the growth of `citizen developers’ are real, despite the fact that the tag can make them sound like a mix of dilettante code meddlers and crass, inexpert do-gooders that just get in the way.
Not only is that not true in the vast majority of cases, but according to Guillaume Roques, EMEA head of Developer Relations at Salesforce, it is now essential that they come good.
He referred to the suggestion, made by his colleague Adam Seligman, VP of developer relations in the Salesforce ecosystem, in a recent keynote presentation to a recent O’Reilly Software Architecture conference, that there is a need for at least 100 million applications developers over the next few years if the demand for new applications is to be met:
So we need the citizen developers to do much of the work. These days, everyone is becoming a developer. Any time a user answers any version of the ‘if, then, that’ question, they are acting as a developer.
And Salesforce is doing what it can to promote that growth. It has, for example, become one of the first software vendors to support the growing CoderDojo movement.
Indeed, at the recent Salesforce World Tour conference at London’s ExCel, the company’s President, Keith Block, presented CoderDojo’s Global CEO Mary Maloney with a cheque for £200,000 to help resource its work of providing a learning space for kids looking to dabble- and more – with coding and applications development.
The objectives of the movement may seem a bit airy-fairy at first sight, but there is some hard-nosed thinking behind it, as Maloney pointed out:
No child will ever pay to join a Dojo, and they don’t all have to turn into developers. But in future every single job will have a coding component within it, and all software vendors need to know that there is an on-going need for coding talent around the world now.
Dev thinking
The key difference for anyone getting involved in coding today, according to Roques, is that they no longer need to know anything about the underlying technology. The range of development tools, such as those in the company’s Heroku set, now operate at several levels of abstraction away from any requirement to get down and dirty with the ones and zeros.
This is, in his view, now outstripping the reality that still exists in the world of applications development:
There is still an imbalance in the world of Dev/Ops. There is still far too much time spent by developers on operations work when it is now the development work that is really needed, especially when a growing number of applications have a life of just a month or so. I have seen reports which suggest that 75% of a typical developer’s time is spent on administration of the infrastructure, not innovation.
What is most interesting here is that, despite the potential to reduce this workload offered by cloud delivered services, the percentage of time spent `keeping the lights on’ in datacentres has not really changed in 25 years or more.
For many businesses, the real threat is that this waste of resources can lead them directly in to the risk of what he called `being Uber-ized’, in the same way the taxi business is being dramatically changed by Uber:
The issue for businesses now is being first to market, not offering the best product. Indeed, I was reading something the other day speculating that Uber may find itself Uber-ised by the emergence of self-driving vehicles.
What is certainly true here is that, even if Uber acts quickly and forms partnerships with the car vendors, the drivers currently profiting from working within the Uber model will find themselves Uber-ized out of a job.
Roques sees at least part of his job as helping developers package up their intelligence and knowledge about coding so that others can have access to it and combine it with their own intelligence and knowledge about their own work specialisms. These are the classic `citizen developers’ that are now becoming a prime target:
We need to make the system of engagement smarter so that they can re-use larger blocks of code. That was the objective with the Lightning Application Builder which we introduced last year. This helps citizen developers put together applications and build processes by acting as an orchestrator.
The company has also added support for Docker containerised applications delivery to make deployment to production environments easier:
The need now is to put applications development at the centre of the economy. There will be no mobile or wearable devices without the work of developers.
And the place he sees for both specialist and citizen developers is out in the Salesforce partner community where, he stated, every £1 of Salesforce revenue generates £2 – £3 of revenue in the partner channel.
The CoderDojo impact
It is here that the company’s growing relationship with the CoderDojo movement gets interesting. Roques admitted that to help foster developer growth the notion of an `Academy’ model has crossed into the corporate consciousness, though it is by no means a definite plan yet.
This would be a coding equivalent of Premier League football clubs’ training academies. And while only a select few get to join the club’s playing squad, the process raises the standard of playing generally.
Dojo-ing
CoderDojo’s Global CEO Maloney, has had very similar thoughts in terms of the movements potential growth in partnerships with major software vendors. The £200,000 donation from Salesforce will be used to help buy equipment for its young coders, as well as the company providing space, encouragement and even coding mentors for Dojos as they start.
And it is the need to build relationships with such companies that prompted the notion of having a charity-based community movement for helping kids learn to code headed up by not just a ‘global CEO’ but an experienced, ex-Accenture, legally-trained consultant:
To have credibility with such companies needs someone who can talk their language. It does need a solid structure, and the job title does help. And I do understand that knowing about coding applies everywhere these days. I trained as a lawyer, but my first day at Accenture I found myself having to write some code in Cobol. So the idea of working with companies running academies to help kids develop their skills is something we are certainly thinking about.
The CoderDojo idea started in Ireland in 2011 but now has a network of over 700 dojos in 57 countries around the world:
Every dojo that has started has been over-subscribed in a few weeks.
They are called `dojos’ for the same reason the Japanese Sumo wrestling schools have that name. The participants largely decide what they want to learn, rather than learning by `rote’. Children come as soon as they are able – six or seven years old is common. They are often mentored by older children, and they decide what they learn and why – usually starting with subjects that interest them:
There is no curriculum, they learn what they want to learn. They are not getting this in any other way, certainly not from schools. It is also a good way of getting girls into technology. And no child ever pays, which means we can reach out to those that don’t have access any other way.
The upper age limit for attending is 17, which is where the idea of company-run academies as follow-up options is attracting attention.
My take
Underpinning this is the fact that applications development is changing fast. The days of the days of the mega-applications with millions of lines of code are waning, and mobile devices are pointing the way to smaller apps with shorter lifecycles. That million-developer requirement may be a severe under-estimate.
And while CoderDojo may never produce the next Alan Turing, if it produces thousands that can knock out a quick marketing campaign app, that may arguably be more useful.

Read more on: Cloud platforms - infrastructure and architectureCollaboration sharing and digital productivityCRM and customer experienceInfrastructure 