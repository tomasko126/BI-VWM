
Given the advancements in database, container, platform and other technologies, the reasons for not offering a multi-tenant architecture are getting thin. So, with some vendors having multi-tenancy for 20 years, what’s holding up other vendors?
Why does multi-tenancy matter?
When you buy ERP software you can choose the deployment type (e.g., on-premises, private cloud (a cloud-like environment running on-site in a single customer’s facility), or public cloud). If you want a public cloud solution, you also have the option of getting a hosted, single-tenant or multi-tenant solution. Many ERP cloud solutions are still single-tenant, hosted products.
Briefly, the key benefit of multi-tenancy is that the software vendor, not the customer, is responsible for patching and upgrading the cloud-based software. Multi-tenancy keeps software current and helps IT shops prevent the buildup of technical debt. It also helps firms keep their IT personnel working on more strategic work beyond patching, maintaining and upgrading software.
Multi-tenancy is also important today as cloud based applications often get upgraded multiple times per year. Having the vendor automatically upgrade applications is a major time saver for customers. This upgrade frequency may be a form factor greater than what on-premises users are accustomed to i.e. the once every 18-36 months upgrade cycle.
Paul Wright, CIO of Accuride Corporation, says the best benefit of multi-tenancy is that it creates a multiplier effect for innovation. Since all customers are on the same version of the software, using the same technology platform/stack and are using solutions that aren’t customized  – they may be tailored but not altered – then the vendor and customers can rapidly create new innovative product enhancements. Everyone, customers and vendors, are solving common business problems. This doesn’t happen in the on-premises world as different customers run on different versions of the software and different combinations of hardware, systems software and variants of the application software.
History lesson
Remember internet/web-based apps in the late 1990s? These vendors had only one-version of the software and every user accessed it. Search engines like Google did this as did scores of other firms. What they offered was a type of multi-tenancy except we didn’t call it that back then. That was over 20 years ago.
In 2005 when Workday was formed, its creators decided they would have a multi-tenant cloud suite. That was 13 years ago. In 2007 SAP unveiled its A1S product – now known as Business ByDesign- with what it called mega-tenancy. They subsequently reworked the product to support a more traditional style of multi-tenancy.
In that same 2005-2007 timeframe, scores of new HR software firms were launched with most of them building multi-tenancy in the solution from the get-go.
Nine years ago, there was so much going on with multi-tenancy I wrote a big piece on the issue.
Formed in the late 1990s, Salesforce was multi-tenant from the get-go. Plex was also formed around 2001 and had multi-tenancy shortly afterwards.
So, here we are in 2018 – somewhere between 12-20 years since the first multi-tenant applications appeared – and many ERP product lines still aren’t multi-tenant. Why?
The excuses
Vendors continue to explain away their lack of progress re: multi-tenancy. Here are some of their excuses:

No one knows our old code – Yep, one giant European vendor executive admitted that they would need to hire hundreds of new programmers to reverse engineer the old product line to figure out how it works. It seems all of the original developers from the 1970s left a long time ago. Upon hearing this, I immediately wondered how they were providing application support, upgrades and maintenance all these years with people who don’t know the product. The other sobering thought was that customers probably paid them billions in maintenance fees over the same timeframe to deliver very little.

A colleague, Tom Ryan, points out that this excuse is focused on the wrong problem. Vendors shouldn’t be re-platforming old functionality. Instead, they should be re-imagining what a process looks like in today’s technology and business world. Old code running in a multi-tenant world is still solving yesteryear’s functional issues.  He’s right.

Our customers don’t want multi-tenancy – This is a messed up argument. First, a vendor that only sells on-premises software will have customers that chose on-premises software. Of course those customers want what they already paid millions to buy. This argument is flawed because of selection bias. Instead of asking their customers, these vendors should be assessing what the market in general wants.  To see just how bad this argument is, just look at the facts: lots of big companies have bought multi-tenant solutions from Workday, Salesforce and others.  Old, on-premises providers are losing market share and customers to newer multi-tenant solutions. If they weren’t bothered by this change in market tastes, then why do the executives of these on-premises vendors spend so much time attacking their multi-tenant competitors?
Multi-tenancy will upset our channel partners/resellers – This excuse is rarely spoken aloud but it’s there. Some old school firms owe their existence to armies of partners and resellers. These partner firms have made fortunes for themselves and the ERP vendor by installing and subsequently maintaining/upgrading these solutions for customers. If a vendor were to offer a multi-tenant solution (i.e., a solution where the vendor, not the reseller/partner, provides upgrades to customers as part of the subscription), then a major source of partner revenue disappears.

Again, Tom Ryan points out that partners/resellers have to change, too. No one gets the luxury of staying put when it comes to technology. He suggests that partners/resellers use their subject matter and domain expertise to craft new complementary services and/or bring additional value-add technologies (and process improvements) to clients. He’s right.

It costs too much money – Yes, some vendors complain that the cost to re-write the guts of their solution to support multi-tenancy would be significant. Notwithstanding the fact that these same vendors collect millions in maintenance fees every year, the simple facts are that vendors don’t like to spend cash on customers they already have. Instead, these firms need all that cash to:

Pay off the considerable debt (or in really sad cases, pay the excessive debt servicing costs) that their private equity owners have saddled the company with.
Pay dividends to shareholders
Report record earnings and cash balances to Wall Street with the hope of keeping their stock price at record levels – some executives fear their employment is in jeopardy if they fail to meet Wall Street expectations. Forget customer needs as Wall Street needs trump all else in these firms.
(This from colleague Frank Scavo of Strativa)



Finally, traditional vendors need all that cash to acquire cloud providers to make up for the fact that they don’t have a viable cloud strategy of their own.
Rootstock (a cloud multi-tenant ERP vendor) CEO Pat Garrehy added:
Legacy ERP suppliers are captive to the financial structure of their old business models. Some simply lack the vision and commitment both technically and from a business perspective to make the transition. Multi-tenancy benefits both the customer and the software vendor. There really is no excuse.

Some of our (acquired) products have multi-tenancy and our core (legacy) applications don’t require it – This one’s a pip. If a vendor can’t/won’t develop multi-tenancy for its product line, it acquires some peripheral applications that have it. This is a stalling strategy that allows the vendor to claim they have ‘modern’ ‘cloud’ products when their original product line remains stuck in the past. Another variant of this ploy requires the vendor to create a cloud data warehouse that may be multi-tenant while the core applications remain on-premises or single-tenant. Again, the point of these maneuvers is to create the appearance of modernity without doing much of the requisite work. Stall tactics are just that – stalls. Don’t accept this.

The big issue for both vendors and customers in this scenario is that the proliferation of platforms adds costs and complexity. This is more of a hindrance. A vendor’s product line should either be on-premises or multi-tenant cloud – not a solution with piles of each.
Rootstock’s Garrehy adds:
One of the worst parts of this is that legacy vendors are attempting to hijack what “cloud” really is and are doing their best to fool customers. Hosting a stack of technology and providing access over the internet is not what the cloud is all about. Hosting represents a very small fraction of the benefits a multitenant cloud system provides.  Ultimately it is the business benefits that make modern multi-tenancy architectures so compelling and a no brainer for software vendors and customers alike.

Multi-tenancy is an American thing and our European customers don’t want it. This is an easy statement to make when your local competitors are also saying the same thing. While some geographic segments are faster/slower in cloud adoption or in demanding multi-tenancy, the movement towards multi-tenancy is there. The key question is why wouldn’t a vendor create two versions (on-premises AND multi-tenant cloud) of their solution to double the addressable market? Cloud solutions are very common in developing countries where businesses are leap-frogging on-premises solutions and starting off directly with cloud solutions. On-premises solutions hold sway in countries with large installed bases of on-premises products or in locations with spotty electric power and/or internet access.
Manufacturers want access to their ERP software and computing environment. Yes, there are firms that want to have their code on-premises. Some want to make major modifications to the product and cloud solutions may not permit this level of customization. For those firms that deeply modify a package, then vendor provided maintenance via multi-tenancy or otherwise becomes a non-issue as it may be too hard/expensive to update something that has been mangled so much.

This raises an issue for any firm still sitting on a lot of highly customized ERP apps: How much of that customization is really necessary and why are you paying maintenance on something you can’t upgrade?  Customers might want to rethink all of this customization and vendors should be rethinking processes.  Every process needs to be re-imagined in light of all of the new big data sources, sensors, ML, AI, NLP and other opportunities.
Some manufacturers and distributors want systems that operate with millisecond response times. Here you can think about the speed with which some parcel routing gates work in some fulfillment centers. The latency of some cloud-based solutions makes some functions problematic. The answer to this isn’t necessarily to go with an on-premises solution. Instead, some cloud solution vendors are already placing some edge solutions on shop floors, in distribution centers, etc. to handle some time sensitive tasks or to perform some IoT pre-processing.

If the multi-tenant environment goes down all customers lose access to the system – Well, the same statement can be made re: on-premises solutions, too. If your data center or server fails, your system is down. The fallback, security and recovery capabilities of cloud based solutions often dwarf that of private company data centers. This is especially true in SMB customers’ data centers that have never been through an ISO 27001, SOC 7 and other audits. One CIO told me that major cloud solutions have failover, recovery and disaster recovery capabilities that all but a few of the largest corporate data centers could match.
Multi-tenancy is something smaller businesses want not larger ones – I never hear anyone doubting that smaller firms like multi-tenant solutions. Few small business people I know want the headaches of acquiring lots of hardware, systems software, applications, and, of course, IT staff. The budget just isn’t there for all of this. They want great technology that requires little to no effort on their part to maintain.

As for larger enterprises, have you seen the enterprise customer lists of Workday, Salesforce, ServiceNow, etc? Plex executive Jim Shepherd commented:
Plex has been exclusively selling a multi-tenant ERP and MES solution for more than 15 years and we do not see any difference in demand between small companies and large companies.  The benefits of multi-tenancy, like lower IT costs and pace of innovation, are critically important regardless of the size of the organization.  We have lots of multi-billion dollar manufacturers running the Plex Manufacturing Cloud and multi-tenancy is allowing them to dramatically lower IT cost as a percent of revenue while delivering better service and responsiveness to their users.  “Single-tenant cloud” is kind of an oxymoron and it really represents a return to 1980’s IT hosting rather than real progress to the modern world of Software as a Service.

We don’t need to offer multi-tenancy as some of our customers can’t use public cloud solutions – This one has some truth to it but it’s not all black and white. Some market segments/verticals have requirements that dictate companies shield their data. It’s the data that must be protected while the app could be shared. Now that we have robust, secured container logic available as well as new secured public cloud resources e.g., Amazon AWS GovCloud offering ITAR capability, there really are few real excuses left.

There is some truth that not every firm or every application is necessarily a great multi-tenancy candidate. An oil refinery, for example, wouldn’t want its productions systems to go through some automated upgrade right in the middle of its complex process production cycle.  Even with adequate advance notification from the vendor and other safeguards, some applications may need to remain on-premises and/or single-tenant.
After the excuses
What I suspect is really going on is that some vendors didn’t make the move to multi-tenancy because:

They couldn’t afford it. If it requires major code and platform changes, it might be too costly to undertake for smaller vendors.
They couldn’t do it technically without performing a quadruple bypass on their product line. This is a real deal breaker for those vendors who love to make small incremental changes to products. Small changes can fit nicely into an upgrade cycle whereas major changes often require re-implementations. The latter is deadly as it can cause some customers to freeze on an older version or open up customers to considering other vendor’s offerings.
They’d rather acquire more/different apps than add multi-tenancy – Here’s the logic: A vendor only has so much capital to spend on its software. If it buys or creates additional applications, this gives the sales force something to sell to existing customers. That drives up revenues and makes Wall Street happy. If they use this capital to add multi-tenancy, it doesn’t create new apps and, as the theory goes, doesn’t move the top line up. Actually, the top line can expand as it opens up a new white space for the firm to sell its solutions.

Multi-tenancy matters even more today
Software buyers I meet with regularly identify four things they want today:

They want out of the data center business
They want out of the application maintenance business
They want out of the integration business
They want lower cost, scalable solutions

To get out of the data center business, clients are shifting large amounts of their IT workload to public clouds like Amazon’s AWS. It’s that desire that is leading customers to prefer any cloud solution: public cloud, hosted cloud, etc.  This is force driving utility computing and economies of scale are behind this shift. Public cloud wins this most every time.
To get out of the apps maintenance activity, customers want multi-tenant solutions where the vendor is on the hook for the maintenance. A reseller or channel partner can host a single-tenant solution and perform maintenance for a fee but a subscription to a multi-tenant solution eliminates that bespoke expense. So, if a customer is looking at a cloud-based ERP, a multi-tenant one will win the deal economics if the functionality is similar to the single-tenant hosted product.
Everyone wants software that is pre-integrated with scores of other applications regardless of their parentage. While a single suite, built on the same platform and using the same data model, is the preferred choice of many software buyers, integrations within the suite and to apps/services outside the suite get a lot of attention during selection projects. Bottom line: clients hate integrations that break and vendors that won’t take responsibility for ensuring their viability on a continuing basis.
Additionally, software buyers want solutions that have low TCO and whose costs can scale up and down during the term.  Few solutions on-premises or cloud-based allow prices to go down but users are watching the TCO costs over 8-10 year windows and are expecting improved economics over the current solutions.  Multi-tenancy can make the economics better in many cases.
Paul Wright adds an additional ERP buyer need today. CIOs want their team focused on solving business problems not technology issues like database tuning.  The former moves top and bottom line performance for the company. That’s strategic while the latter is tactical.
Final thoughts
Vendors that don’t evolve fade away. Sure, some changes or evolutionary turns will be traumatic but they must be confronted. Avoidance is not a winning strategy.
I’m always suspicious of vendors that are apologists for not innovating. I see so much change every day in technology that it’s hard to understand how one can resist responding to something so important.  I have sympathy for vendors who bet on a technology or innovation that didn’t pan out or when vendors choose an alternative approach that isn’t a winner. But great vendors keep innovating – they don’t cease to change.
I also wonder about future IT professionals and their willingness to stake their careers on implementing, maintaining and patching on-premises applications. I suspect few new tech graduates want that for a career. They’ll likely want to work with new technology like AI-powered analytics, web metrics, anomaly detection tools, IoT and other big data, and much more. I believe these activities will rise in popularity while ERP maintenance will become the purview of application vendors and not their customers.  I know I don’t want to go back patching/upgrading Walker Interactive and other on-premises software at this stage in my career.
It’s time for multi-tenancy.
Image credit - via Brian SommerDisclosure - All the multi-tenant solution vendors mentioned here with the exception of Rootstock are premier partners.Read more on: Cloud ERP financials and supply chainCloud platforms - infrastructure and architecture 