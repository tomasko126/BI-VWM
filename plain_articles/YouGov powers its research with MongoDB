
Given that market research is a business that is all about the data, and the ease at which you can work with the data you collect, it’s unsurprising that the choice of database place a central role for companies such as YouGov.
YouGov has shifted its database strategy in recent years, moving from an in-house developed key value store, to going all in with NoSQL provider MongoDB. The research firm is now also considering the benefits of shifting its technology estate to AWS, which could result in it taking advantage of Mongo’s recently announced cloud offering (Atlas).
I got the chance to catch up with Jason Coombs, YouGov’s executive technical director, at MongoDB’s annual user conference in New York this week, where he explained that the use of Mongo has enabled the company to better analyse the data it collects.
YouGov is able to now query pretty much anything, instead of having to manage nondescript, hard to understand “opague blobs”. Coombs said:
Late 2009 we were using something called Fast Store. It was our own in-house key value data store. The keys were the survey IDs for the survey data, and the values were pickle Python. Just opaque blobs that couldn’t be queried, or indexed, or anything along those lines. We weren’t indexing them. So basically you’d load that blob out, you’d save it back and that’s all you got.
It meant that basically there was only one query pattern. You could only query along specific survey periods that were done – even irrespective of the questionnaire, the questions that were asked of those panellists.
With MongoDB that’s just one of the features, where you can query into any fields of the document. Whether that be the ones that are sort of structured, or even the semi-structured ones. So specific values and answers that a respondent might give, you can query on those now.
However, like we saw with the Comcast case study that we published this week, MongoDB is getting attention from customers because of its performance credentials. Coombs said:
The main factor, the main driver, was performance. Even our in-house key value store wasn’t fast enough. It was running into performance problems, locking problems, concurrency challenges. So MongoDB solved most of that. It was less than a three month transition from that custom store to MongoDB.
The JSON structure was able to basically accept the same data as our Python objects were storing. There were maybe three exceptions. And those were very clear in the code. You could see our developers had identified them and were accounting for that in the limitations. Those limitations have since been eliminated and removed them.
The benefits of MongoDB
Coombs said that most of his database training has happened as a result of his experience with NoSQL – specifically Mongo. He said that one of the main benefits of MongoDB as a database is that it’s easy to use, but it hasn’t the benefits that traditional, relational databases provided. Coombs said:
For me, I was learning about MongoDB before I joined YouGov. They came to a Python meet-up, I saw it and I was just floored with how easy it was to use. Sitting in the presentation that the MongoDB rep was giving – I installed MongoDB, logged into it and was creating documents on the fly during the meeting. It was so easy to do. So I already had it in the back of my head that I knew I wanted to use MongoDB for something.
I didn’t have formal database training, I kind of avoided it in university because it wasn’t interesting to me. So I learned databases around Mongo. I can echo the sentiments of the keynote, where they’re saying that this was designed to follow all the best practices of SQL, without taking on some of the impediments.
However, Coombs did admit that there were still capabilities that could be introduced to make MongoDB even simpler to use. In particular he’s keen for something along the lines of SQLite, to make management of the system easier at times. He said:
Another would be an embedded solution, something that would obviate SQLite. Or would allow you to use MongoDB protocols and technology, without having to deploy a service. So as a developer, maybe you’re on a plane, and you want to test your application against MongoDB but you don’t want to have to set up a service, give it a folder, and lay out all the file system.
If there were a way to launch MongoDB in session and connect it to a folder, or maybe just a file. If you could do that in MongoDB that would even lower the barrier to entry and expand a few use cases for small applications that don’t need the power of a cluster or a replica set.
Cloudy future
We heard earlier this week that MongoDB has finally launched its own database-as-a-service offering, in partnership with AWS, Microsoft and Google. Mongo already has over 50% of its customers in the cloud (via other 3rd party providers) and it is hoping to win some of this business.
YouGov can see the appeal of Atlas and is already considering it as an alternative to its current set-up, especially as the company is considering a shift to AWS. Coombs said:
“We are not exactly on-premise, we are co-located in two data centres. One in London and one in Palo Alto. We like to have control of our own deployments. Atlas is exciting because we are considering moving and migrating to AWS as a provider. If not for our US data centre, perhaps for our entire operation. If we do that Atlas is going to be amazing.
“I would love to be able to say ‘create your cluster and you’re ready to go’. I may even take on Atlas for a small segment of our applications that aren’t regionally relevant, that don’t have all the constraints that our current deployment has and experiment with it that way.”
Image credit - People use ladders to work in cloud graphic © jesussanz - Fotolia.comRead more on: InfrastructureNoSQLOpen sourceUse cases 