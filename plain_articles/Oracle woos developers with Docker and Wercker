
According to Deepak Patil, vice president of development at Oracle responsible for infrastructure and the Oracle Cloud platform, containers are a good way of abstracting backwards out of the technology when delivering applications.
This is no doubt why the company has jump right into the container usage market through a partnership with Docker and the acquisition of Dutch container management specialist, Wercker.
He sees these moves as helping Oracle users to move/abstract the development process up the business stack, which in turn allows those that know what the business problems are to actually do the development work.
The deal with Docker allows Oracle to release its databases, middleware and developer tools into the Docker Store marketplace via the Docker Certification Program and the Docker Store. Developers will be able to build cloud-native applications using Docker Enterprise Edition as the container platform and make them available Oracle’s databases and developer tools immediately available as Docker containers.
The company also stepped in a few weeks ago to acquire the Dutch developer support services company, Wercker. This provides developer management tools for both Docker and Kubernetes, allowing developers to rapidly build and manage containers for such tasks as testing new code.
And licensing….?
All this effort, however, does raise some questions for both the company and its customers, not least being that company’s joyful rush towards becoming a leading cloud platform provider does open up debate about potentially sensitive issues such as licencing and revenues.
Speaking to diginomica at the recent Oracle:Code developer event in London, where he was keynote speaker, Patil acknowledged that Oracle is going through a generational transformation of its own right now, and part of that process is what impact his work on the development and growth of the Oracle cloud platform and services may have on the company’s long-standing , and heavily on-premise oriented, business models.
From his point of view of course, there is the opportunity to remain dispassionate. His work may be setting in train some transitional disruption for the business overall, but resolving issues such as the impact on product licencing, maintenance costs and the like not within his direct remit.
This is an issue however, that is likely to become more complicated as the use of Docker enterprise containers get more traction within the Oracle community. Here, it will become possible for not just individual applications but complete, packaged, services to be moved not just from server to server, but from on-premise to cloud and back again, as required.
That is a process which is likely to raise some complex management issues on the admin side. Patil says:
I won’t comment directly on licencing strategies for databases as it applies to containers. But what I will leave it as is that we will give our customers what they want. Any everything else around that: pricing strategy, support models, licencing strategies, we will make it work because that is what our customers want.
Everybody is going through this: Microsoft, VM, everyone. There are specs for the licencing model that need to evolve. But this is now about covering the entire spectrum of user needs. Customers can bring the biggest, most powerful databases and applications. They can run them on our really powerful bare metal servers. They can also user Docker to bring new developments to a DevOps pipeline in the cloud. I just want to give developers all those options.
Removing the seams
Patil feels that the 10+ million developers on the planet have had more impact on the development of cloud as a computing paradigm than anyone else. And cloud allows them to focus on innovation in areas that they are passionate about:
It boils down to giving them options that are seamlessly useable, integratable. The entire Docker conversation fits really well in that paradigm. The need is to give them as many options and possible, and eliminate as many seams as possible.
The Oracle infrastructure now consists of some seriously heavyweight investments in applications and software, hardware, datacentres, networks, and management tools. As well as applications-based services in the cloud, one of the strong components he sees in its armoury is the provision of extensive bare metal resources.
This obviously has an attraction to a large number of existing Oracle users. It offers a way of exploiting cloud services to stretch beyond the resource restrictions of their on-premise facilities without the upfront investment and commitment of on-site expansion. This is where the partnership with Docker is likely to find its primary target in the Oracle environment, at least to begin with.
He sees Oracle’s position as one of the few, if not only, cloud service provider responsible for the entire stack, from hardware, through software, to software defined network to the cloud services itself as giving it the tools to eliminate most of the seams between services. The company is still looking to fill out and enrich that stack where possible.
The goal here is to build what he called a highly cloud-native, containerised service capability. To that end, the company is also now investing heavily in building datacentres around the globe. Patil claims it is the only cloud service provider offering the complete stack across the world – having covered 51 countries in just nine months. This, he suggests, also gives them control over security issues that is a good deal better than its competitors.
He sees this giving a significant boost to the company’s developer partner community. It will enable to them to effectively sell containerised, packaged applications with not just the applications code but also all the compute and networking resource set up and optimisation data needed, and know that it will run on the Oracle Cloud platform:
We see two types of developer now and our investments are focused on them. There are citizen developers, and there are high core, modern systems expert developers. What the packaging innovation does is unlock a lot of potential for the citizen developers. It does not now take hundreds of thousands of lines of code to drive innovation. And it becomes easier to move code from development to test, pre-production and on out into production. So the role for some of these companies will evolve.
He sees this also fostering the pace of evolution in applications development. He noted that people are already talking about what comes after cloud computing – brain computing. Here you just think of something and it gets developed. That would seem to suggest that developers will have to change away from the tech per se and towards business function:
There is no doubt that the roles of developers will evolve, and both the technical knowledge and the business knowledge of developers will evolve. The seams between the different layers in the stack are being eliminated and the seams between different functions are being eliminated as well. Three years ago, the office of the CTO made the decisions on the technologies and standards to be used, but not anymore. The learning curve for new technologies is so easy now that developers make the decisions.
As an interesting side issue here, he doesn’t see APIs playing a major role here in building integration and collaboration between different technologies within the stack. He sees the `tax’ on dealing with the minutiae of technology usage going away, but at the upper levels of the stack there is more potential from machine learning and artificial intelligence as the bottom layers of complexity in programming with these technologies get `ironed out’.
The global back garden
He sees programming languages and database systems losing their importance as they become much more a part of an overall ecosystem, a model that can then be seen in the way the Oracle Cloud Platform is developing. According to Patil, the goal is to build an availability domain architecture using high availability building blocks connected with non-oversubscribed, fast, flat networks. The aim is to ensure latencies of less than 100 microsecond steps between hubs:
We are investing in building the network as a platform so that everything runs in its own virtualised network. This means anything with an IP address can access and use the service, from screamingly fast bare metal servers to complete services. This is a first in the cloud business and we want to give users a completely virtual service in the cloud.
The aim is simple: whatever users do with Oracle applications or services on the cloud is done using the Oracle Cloud specifically. This will make usage charging easier and could therefore resolve some of the licence/revenues issues. It will still be possible to use other cloud services – and in cases may be necessary – but that could also be where licence and revenue issues may reappear.
To that end, the company has invested heavily in spreading its capabilities and resources. It also has over 700 certified open source tools and developer-oriented apps available on the service, plus 3,000 cloud applications available on the Oracle Cloud marketplace.
My take
It will, of course, take some time to see just how well Oracle fairs in the nebulous world of cloud computing, and the company has had to invest in a lot different areas at the same time in order to catch up. But for Oracle users this model of providing the complete stack – everything they are likely to need – looks like it is filling out to the point where the 80:20 rule should certainly apply. Eighty percent of users should be able to exploit it and get the same percentage of their applications and development needs met. And Patil seems very keen to ensure that the other 20% is i’nnovatable’ with relative ease.
Image credit - docker Disclosure - At time of writing, Oracle is a premier partner of diginomica. Read more on: DevOps NoSQL and the open source stack 