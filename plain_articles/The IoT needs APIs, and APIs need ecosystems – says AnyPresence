
AnyPresence has the buzzword gift and curse. They are on the analyst map as an “MBaaS” (Mobile Back End as a Service), but they want to get out from under that buzzword – and who can blame them? MBaaS is the clunkiest buzzword in the “aaS” family. As AnyPresence brings its application infrastructure to the Internet of Things (IoT), the “mobile” tag is no longer sufficient.
Chief Product Officer and co-founder Richard Mendis also has a story to tell about why launching apps without APIs hurts your outlook. Fine – so what can customers learn from that?
Founded in 2011, AnyPresence saw an opportunity to build out infrastructure as a service for enterprise mobile apps – a move that had already been made in the consumer space with companies like Parse and StackMob. Fast forward to 2015, and AnyPresence is now in the hundred enterprise customer range, with tens of thousands of developers using the platform. AnyPresence is almost at the fifty employee mark, and another funding round is in the plans for 2016.
Mendis thinks that AnyPresence has a big advantage in the API-versus-apps debate. AnyPresence allows its customers to do both, with API and app infrastructure out of the box. According to Mendis, this can help companies reduce time to market for both the app and the APIs that power it by “at least 60 percent.”
Richard Mendis, CPO
But as AnyPresence tries to make its move, the micro-services market has shifted, with the Internet of Things ratcheting up the stakes. That’s where Mendis sees the opportunity – and the mistakes:
There’s really a convergence of three things. The demand for mobile applications is driving the demand for modern app infrastructure around APIs and micro-services. Now, the IoT is simply adding to that demand. If you think about it, the smart phone and the tablet were the first nontraditional application endpoints to come into the fray. IoT devices and sensors are just a continuation of that trend.
And about those API mistakes? Mendis:
When you look at the light bulb space, GE, Wink, and a bunch of other companies also launched light bulbs around the time that Phillips did. When Phillips got to market, because they had their APIs published, there was such a groundswell of ecosystem support. Recently, the Syfy channel launched an app where for certain programs running on the Syfy network, would synchronize the color of the show with the Phillips light bulb.
Granted, it’s not a life-changing application, but that type of innovation helped Phillips completely take off in terms of market share. Today, the Phillips Hue bulb, even though competition is going to be stronger, still commands a massive market share.
Mendis also thinks Nest would have a bigger market share if they had launched with an API. But hold up – it’s not that simple. Not all APIs are created equal. I challenged Mendis with examples where APIs were issued – and landed with a thud. Mendis agreed. He detailed the following keys that turn APIs from a dud into a competitive advantage.
From dud to competitive advantage – nine keys to successful APIs
1. API/developer experience matters. Mendis:
It’s not just about the API. It’s the entire experience around it, the development portal, how you sign up, how good the documentation is.
2. APIs mean shifting from a “brick and mortar” to a web services mindset:
Two of our customers are Citigroup and MasterCard… They’re seeing a lot of disruption in their space, and starting to realize that they’re no longer, in the case of Citi, a brick and mortar bank. Or in the case of MasterCard, a piece of plastic. They have to become services that are embedded in a financial services ecosystem.
To that end, both Citi and MasterCard have launched their own APIs. In Citi’s case, that means banking APIs for services like logging into an account, getting a list of transactions, paying a bill, etc. In the case of MasterCard, APIs are used for thing like digital wallet, finding an ATM, processing a transaction, and doing fraud detection.
3. Without a developer ecosystem, APIs are useless. Citing Citi and MasterCard, Mendis explains:
What both of these companies have realized is the API a minimum to play. The whole developer experience around consuming the APIs must be as seamless and restrictionless as possible. They work with us to provide sample applications and sample source code that show the developers not just static documentation, but how the API is meant to be used and the context of how it’s meant to be used. In some cases like MasterCard, we generate source code dynamically that shows the developer very specifically how to consume the MasterCard APIs in different platforms like iOS, Android, HTML, etc.
Mendis emphasized you can’t build a developer ecosystem with trust. Developers need to know your APIs will be around a year from now, and that the specs aren’t going to switch around. Excellent documentation helps, but you also need:
4. A clear approach to intellectual property (IP) – ideally one that assigns the IP to the developers. If developers aren’t confident that you’ve sorted through the IP morass, they aren’t coding on your platform. If open source components are used, those licenses must be clearly understood. Mendis believes that AnyPresence’s approach to IP is a competitive edge:
One of the things we do with our platform ensure that our customers are provided with a technical and business warranty that the source code we generate is common, readable, separate, and they can assign the IP. Because everything includes open source components today, we also make sure that the open source subcomponents we have in the product all use permissive licenses. We give our customers IP ownership of that source code we generate. That same capability allows them generate sample code and provide it to developer ecosystems.
5. Compress the time from API to “hello world.” If developers encounter logistical friction consuming your API, you will lose them. Mendis:
We set up a whole sandbox environment in the cloud and let the developer play with that application, and even use it as a starting point for their own app. There’s this concept in the developer ecosystem called “time to hello world.” We’re trying to help developers shrink the time to hello world when using one of our customers’ APIs. That’s going to be important in the IoT space. Soon, IoT vendors will all start having APIs; most of them will do more or less the same thing. How quickly a developer can consume the APIs and use it in their solution will become a differentiator.
6. Take advantage of cloud providers to make APIs sustainable:
[Making APIs sustainable] is something companies have to think about. One aspect is making sure you designed the API properly, so that you’re not changing it. The other aspect is how long do you want to support it? Obviously, leveraging cloud-based technology on platforms like Amazon to reduce the cost of running an API is another aspect of making APIs sustainable.
7. APIs don’t market themselves. Don’t expect a standing ovation when your API is released. Mendis advises using events like hackathons to get the word out:
If you build it, they will come is not a good API strategy. The good news is that it’s much clearer how to target this audience than it was even a year or two ago. There’s so many hackathons. For example, in the financial services there’s fintech hackathons. MasterCard and Citi run their own. Both of them have sponsorships that bring other partners into the mix. In fact, unbeknownst to us, Citi and MasterCard collaborated on a hackathon, and it was interesting to see both companies use different aspects of our solution in that mix.
8. Getting the word out isn’t free – you’ll need budget. Mendis:
Beyond evangelism, budget is a chief component on the back-end of the program, to be able to drive awareness and get to the influencers in the developer ecosystem so that they can experience your API, write about it, blog about it and get the word out.
9. Consider tooling rather than building mobile apps and APIs from scratch. Of course, we can expect AnyPresence to say this, given they are in the apps/API tooling business. Still, Mendis is convinced that such tools give companies a leg up:
The alternative to Any Presence – or any of our competitors – somebody building it from scratch. But we can help companies get to market a lot faster, and at a lot lower cost, than if they were doing it from scratch. Because of the best practices and the platform that we have, you no longer have to pick between building an app or an API first.
My take
I pressed Mendis to explain why a company would take a risk to expose its applications to third parties. Returning to the MasterCard and Citi partnership, Mendis talked about how an outside developer could build a mobile app that allows a parent to check on their college students’ spending, or set up an automatic payment when a credit threshold is reached. “These are not applications companies like Citi or MasterCard would ever develop in their own IT departments,” says Mendis.
As an API krishna, I don’t object to Mendis’ assertion that APIs are just as important as kickass apps. But successful APIs lead you to developer ecosystems, which often require a fierce culture change around IP and engaging external developers. They may view the company as stodgy and unappealing compared to the likes of Android and Apple.
That doesn’t mean there isn’t a great opportunity for enterprise app developers; I’d argue it’s a better pursuit than languishing in the Apple store. It’s encouraging to see that hard lessons around APIs haven’t been for naught. Rather they have informed winning approaches. Hopefully these tips provide a good starting point and/or gut check.
Image credit: business team with blueprint and gadgets © Syda Productions – Fotolia.com
Disclosure: diginomica has no financial ties to AnyPresence. I was approached on this story but AnyPresence PR, and found the topic worth pursuing.
Read more on: InfrastructureInternet of ThingsIoT robotics and AIMobile 