
Digital content has come a long way since the earliest websites. But it’s been a constant battle to reconcile the demands of content creators with the limitations of the underlying technology. For all the automation that content management systems (CMSs) provide, they still struggle to keep pace with innovation in areas such as personalization, analytics, connected systems, while adapting to multiple changing formats and channels.
In response to these challenges, some developers have turned to what has become known as the ‘headless CMS’. Headless, because it focuses on management of the content, as a separate concern from how that content is presented. So whereas a traditional CMS handles content within a framework where the final output is already decided — for example, a Web CMS dedicated to publishing web pages — a headless CMS lets the coding and presentation be handled separately. This means the same content can be reused in a mobile app as well as a web site, or presented in an interactive augmented reality context, without having to manually reshape it for each different digital experience.
This approach has a lot in common with the evolution of application development to move towards a more API-based, microservices approach, believes Matthew Baier, COO of Contentstack, a headless CMS platform which recently spun out of its sister company Built.io. Contentstack, which was recently named a partner technology provider for the SAP Cloud Platform Portal, makes use of Built.io platforms for mobile applications and API-based integration, adding content management that’s adapted for output across multiple digital channels, including web, mobile and IoT.
Personalized content
This meets the needs of enterprises in industries such as retail, sport and entertainment to get personalized content in front of consumers and other stakeholders wherever they happen to be. Baier explains:
Today the reality is, where are the eyeballs? They’re everywhere. Traditional CMS is in no way set up to allow companies to participate in that. Headless CMS started from an assumption that content is the message you want to get across, which is your business. The other [component] is code and display, and that is tactical and operational.
By separating code and content you can let the content owners really focus on the content and really let developers focus on experience.
This separation of concerns not only future-proofs the content so that it can adapt to new presentation formats, it also allows for new forms of content creation. These days, the content source is often not an individual person. It may be several people working as a distributed team, it may draw on applications that generate data such as prices or order status, there may also be an artifical intelligence component that’s finding and adapting content such as images or product offers to specific interactions.
Retail and sports context
Sometimes, real-time data sources may need to interact in a feedback loop with the user, responding to their input or to contextual cues. For example in a retail context, you may want to react to a customer making a mobile purchase with a follow-up offer that’s based on their location. Quite a few Contentstack customers are sports teams, says Baier. They aim to pull together all the data they have on each fan and offer personalized content that’s meaningful to each individual. This requires integration to back-end systems and data sources that is difficult for traditional CMS to cope with, says Baier.
There’s a lot of moving parts here. Traditional CMS is a closed arena that doesn’t cope with this well.
Integration is the topic CMS professionals hate the most. You’re stuck in plug-in purgatory, or you’re locked into a vendor’s platform.
We’re offering a true integration platform embedded in a content management system that allows you to take any input you want, that’s supportable and it’s all brought together, hidden behind the CMS integration layer so the business user doesn’t have to deal with it. So it’s easy for the business user and flexible for the developer.
Headless CMS experience
The headless CMS is also sometimes described as a digital experience platform because of its ability to update content based on digital feedback. Gaming company TellTale Games uses the platform to ensure that its marketing and sales content stays bang up to date with new releases of its games. This means it can start promoting new storylines as soon as they launch. Other customers use virtual and augmented reality to provide a more tangible sense of their products.
Baier says a common theme in many of its customers is the notion of “connected spaces.” These might be a retail store, a sports arena, an airline terminal or a city plaza, where the experience is personalized to the individual’s physical context. Manufacturing, transportation and field service provide B2B examples.
It’s wherever there’s a real-time feedback loop. It might be changing inventory, or the behavior of a person in a space such as a building.
With marquee customers including Axiom, Cisco, JD Power, and the Miami Heat, Contentstack is one of a new generation of vendors that’s livening up the CMS sector, says Baier.
CMS is one of those areas that has been really boring and static for a really long time. Headless CMS is coming along and really turning it on its head.
My take
I’m intrigued by any development that seems to move away from paper-based metaphors and certainly the notion of a digital experience platform fits the bill. Instead of conceiving content as something that has to be published, a platform like ContentStack emphasizes the experience, and allows for it to adapt to different user contexts and actions. That in turn forces content producers to rethink what they’re creating, to make sure that it’s adaptable and responsive rather than fixed and static.
I’m also a big fan of the notion of the output of enterprise applications being delivered in a ‘headless’ context. I’ve previously written about digital assistants making it possible to interact with back-end applications from a voice or messaging interface. Headless CMS is another face of the same phenomenon, and it connects into the same API-driven functional layer. So the bigger picture here is the separation of enterprise application and content infrastructure into three separate layers — resources, functions and experience.
The key takeaway for CMS platforms from this bigger picture is that content can’t be defined at the same time as the experience. The two must be kept separate so that the content can be experienced in multiple ways. As I write this, I wonder what this means for the type of content I produce here, and I’m not sure what the answer is. But I find the question intriguing and I’m sure it will be fascinating to explore the answer as it unfolds.
Image credit - Big science head © Sergey Nivens - FotoliaRead more on: CRM and customer experienceDigital and content marketingUX and application design 