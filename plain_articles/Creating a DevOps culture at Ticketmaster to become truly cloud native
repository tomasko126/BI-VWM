
Ticketmaster and Live Nation merged in 2010 to become the largest organiser, producer and promoter of entertainment events in the world. It operates on a global scale and has an incredible amount of complexity, selling over 465 million tickets every year, in over 37 countries.
Last year its gross transaction value, which is the value of the tickets it sold, was over $25 billion.
As one can imagine, this is an e-commerce business that relies heavily on its technology infrastructure. However, in recent years it has been transitioning to a cloud native architecture – one that relies on containers, distributed management and orchestration, micro-services, and use of the open source Kubernetes technology – away from more traditional operating and development models models, and the use of private cloud.
Bindi Belanger, executive program director at Ticketmaster, recently spoke at the Cloud Native Foundation’s annual European event in Berlin, where she explained the challenges the organisation faces with its legacy. She said:
We jokingly, and fondly refer to our tech as the tech museum because we’ve got software from every era. Because Ticketmaster has grown so much in the last four years, we’ve amassed 21 different ticketing systems to sell everything from concert tickets to season tickets to your favorite sporting events. Those ticketing systems include over 250 different products and services. To build and maintain those products and services we’ve got an organization of over 1,400 people globally. They build that software on our private cloud today, which is about 20000 virtual machines across 7 data centers. We’ve got a huge network footprint and our technology staff continues to grow year.
In addition to this, given the nature of Ticketmaster’s business, these legacy systems often come under a huge amount of strain when a big ticket event goes on sale. Belanger said:
We have a massive challenge in that we invite the entire world to come and DDoS our website every time we put a major event on sale. So, if Beyonce, or Adele, or Bruno Mars is selling their tickets, millions of fans will come to Ticketmaster.com in hopes of getting one of a few thousand tickets. We go from zero to 150,000,000 transactions in just a matter of minutes.
Can’t be complacent
Belanger explained that whilst Ticketmaster and Live Nation are the largest operators in the market, the business cannot afford to become complacent about new threats, as it does face a lot of competition. Because of the variety of the company’s focus – everything from selling tickets to producing concerts – Ticketmaster has a number of areas from which it could be targeted by new entrants. Belanger said:
We’ve got a huge focus area, which means that competitors can come after us in any one of those parts of our business. In order to keep pace with our competition, we have to be really agile, and very fast. With the scale and complexity of our 40 year old business, with all of our legacy, technology makes making rapid changes really hard. The analogy that we like to use, if you can imagine turning a giant ship, to move everybody the same direction is not an easy thing to do.
Belanger went on to explain that for a long time Ticketmaster spent most of its energy on “fire-fighting”, which mean that very limited resources when on new projects that could add new value and features. She said that the company had a lot of silos within technical operations and that this made it very difficult for developers to work with the operations team.
Ticketmaster was finding that to get a new app deployed or a new environment built up, it would often take several months, especially if it required purchasing additional hardware to build out the private cloud. In addition, if it knew that a major event was coming up, such as the Beyonce concert, then it would have to build out infrastructure to be able to cope with just a few extra minutes of increased demand on the morning of the sale.
These challenges forced Ticketmaster to rethink its operations. Belanger said:
A couple years ago, Ticketmaster made a realization that we needed to become much more lean, and create autonomous teams. The first thing that we did was really a concerted effort around a lean transformation, which meant that managing our technology org like an investment portfolio.
So, from the top down at our senior executive level, they defined the vision, which for us is to connect with 1 billion fans by 2020. And then identified the goals that we need to achieve in order to reach that vision. Within those goals we would define bets, or we bet that if we’d did A that would result in achieving our goal. Then those bets were broken down into smaller pieces of work that were called promises of value.
So, every delivery team was aligned around that promise of value. We would regularly review our progress against these bets and goals in portfolio reviews. And as a leadership group, would make decisions around whether we needed to adjust, pivot, work on something else, or double down, meaning put more resources on the projects that were resulting in high value.
Becoming DevOps
One of the first things that Ticketmaster did, off the back of these new promises of value, was to move the applications support team out of tech ops and into the product teams directly, thus removing an organizational silo and putting them directly with the people that needed to make changes. The next thing it did was embed systems engineers into those product delivery teams. Again, working to get towards truly cross-functional groups.
Ticketmaster also made investments in a whole host of self service tools, for things like access management to servers, or password resets – things that the operations teams spent a lot of time doing. Belanger said:
The goal of all this was to create these delivery teams that were self sufficient, like micro businesses. Their jobs would then be to build software, run it, own it, operate it, optimize it, and monetize it.
As we got closer and closer to a truly DevOps culture, we found that almost half of our time we spent moving code around our different environments. That’s not a really good way to add value. We also found that we had 150 different ways to release software. A lot of the times, that was a manual effort. We found that over half of our incidents were preventable, because of the way that we had set up our deployments and releases. When we would have business disruptions, or incidents, many of them were self inflicted, unfortunately.
Maturity levels
With the insights gained, Ticketmaster soon realized it needed more information to give it a better idea about how it could make more effective change. It did this by building maturity levels – both tech maturity and team maturity. It wanted to be able to define and measure team performance and technical performance objectively.
Belanger explained:
The tech maturity model has about 50 different capabilities, and I’ll show you what it looks like in just a minute, that cover five different dimensions of software development: how we code, how we build and test that software, how we release it, operate, and then optimize it.
The feedback was really great when we started rolling this out to teams. Not only did it give them a really objective way to say, “Hey, we have some opportunities for improvement in our tech stack,” but, it helped facilitate the conversation with product leadership and senior leadership to say, “If we can improve in these areas, we can start to move faster, we’ll experience fewer incidents in production”
As Ticketmaster continued with its lean transformation programme, its senior leaders made the strategic decision that they wanted to move products and services out of the private data centers and into the public cloud. Belanger said:
The two main reasons for that were: One, we don’t need to spend a lot of time and money building out our infrastructure to be always on, we wanted to be able to have infrastructure, but to be more on demand and scaled. But most importantly, the decision to move to the public cloud was to force modernization of our products and services to cloud native standards.
The benefits of moving to the public cloud are many. But, specifically, on resource utilization, not just infrastructure resources, like computer storage, but how were we using our human resources. If your teams are spending all their time building, maintaining, and upgrading their infrastructure, they’re not really spending time adding value, helping the development teams move faster. So, we wanted to focus a lot of our time there.
Getting agile
Ticketmaster has found that with its shift to public cloud, it operates better through the use of smaller teams – where two to five people has proven to be the optimum number. Belanger said:
When you think about two people as a team, it may seem a little strange. But we found that having less people focused on the same problem, allowed us to move faster. Again, we wanted people that had development backgrounds, which is something that’s not easy to find if you’re looking for people that also are really familiar with your infrastructure.
We have been looking for people that have either knowledge, or have been contributing to, cloud related projects, And then from the soft skills perspective, creative problem solvers with a bias for action. We wanted people who were constantly looking to drive and embrace change.
We did an assessment of our existing team members and we found that what we really needed were people that were high performers today. People that are committing code, that were working on solving problems, and had an appetite for learning more and had potential to contribute even further in the future. Our leadership team was then tasked with continuing to do those types of assessments, working to upscale our teams as far as training them on cloud maintenance solutions. We have been actively recruiting to help augment our existing staff with people that can bring in outside expertise.
And the teams are now delivering code on a daily basis. Belanger said:
Leadership, highly skilled and motivation teams, project framework and leadership on the project front, and then community and partnership engagement has led us to a culture of daily delivery. For us daily delivery means we have twice daily stand ups. Instead of having a weekly iteration, or a month long iteration, every morning the team will get together and say, what are we delivering today. At the end of the day you’re asked to demo the value that you delivered.
Because of cloud native solutions we’ve gone from several months to deploying new infrastructure and the environments, to just a matter of minutes.
Image credit - Images free for commercial use Read more on: Cloud platforms - infrastructure and architectureDevOps NoSQL and the open source stackOpen sourceUse cases 