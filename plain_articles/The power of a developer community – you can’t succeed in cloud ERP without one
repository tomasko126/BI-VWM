
After working with software developers for 22 years, I cannot overstate their impact on the business bottom line.  This has finally been recognized and acknowledged over the past few years, but only in terms of software consumption and end users.
With the rise of mobile apps and the need to earn – and keep – customers with better experiences, the many ways in which developers make technology more accessible are now understood. But on a different level – from a platform perspective – developers are the key to any software vendor’s success as well.  This is where having an evangelism strategy and execution plan is so important.
It’s often been suggested that the Apple Mac would have failed if not for a group of “Evangelists” from Apple headed by Guy Kawasaki. Apple had great marketing, design, and engineering teams, and they’d penetrated the education market with the Apple computer and what was then a truly new and revolutionary platform, but the Mac had no business software – no real word processor, no spreadsheet, database or accounting software.
All that Apple could offer the business market was a dream and a platform they hoped to sell to Microsoft, Lotus, Ashton-Tate and even IBM, convincing those dominant companies to port their software to run on the new Macintoshes.  This was an unlikely recipe for success, but the passion and commitment of Kawasaki and his group of Mac Evangelists helped create an ecosystem of software developers that embraced the Mac platform. The rest is history.
Similarly, Microsoft leveraged its industry marketing and developer relations group to ensure the success of Windows, making it the de facto standard of the business world. Though Microsoft later struggled with its mobile app ecosystem, it’s back on track with developers on Azure, now a force to be reckoned with in the cloud architecture game.
You might have the greatest APIs in the known universe. You’re still not getting anywhere without developer evangelism. Today, evangelism activities include writing blogs, holding developer-focused events, facilitating technical meetings with in-house developers/developer managers, forming technical advisory/user groups, writing articles and books, and so on. In most respects it’s still the same labor of love that Guy Kawasaki performed.
Developer communities matter to cloud ERP
Some may think that developer communities don’t fit into cloud ERP. But here at Acumatica, we have been developing and nurturing our developer community for almost a decade now.  Not only do we have a developer network supporting our partner developers, we also hold various events for developers such as hackathons, virtual developer conferences, and developer-specific training. We also host a dedicated Developer Track at our annual Partner and Customer Summit. We have been single-minded about providing the platform, tools, and training that developers need to flourish.
Two and a half years ago we decided to take it further: we held a hackathon at our Summit in San Diego. We could only carve out four hours on a Sunday evening before the main Summit started on Monday to do this, but we did have a couple of months to plan and promote it to our developer community.
We got enough interest to form a good group of 7-8 person teams, made up of subject matter experts from Acumatica, developers, and partner developers (we also invited non-developer types to join the fun, so there were some IT consultants and product managers in the mix as well. I encourage you to do that – it’s valuable for business users to have an immersion into how apps are built).
Rarely, if ever, do non-developers get to participate in these events. We thought we would open it up to help with ideas for projects, and give business users a chance to work alongside developers. After getting our critical mass of participants we held a webinar and unveiled the teams, providing sample project ideas and event logistics and describing the prizes for the winners.  Then we set up project place-holders for each team on GitHub to share code during and after the event.
Hackathons aren’t just for fun – they impact your customers
And what happened? At the end of our four-hour hackathon we had some pretty sophisticated projects.
Acumatica hackathon –  “Team Beta” (grand prize)
For example, one of the winning entries demonstrated the power of “connecting clouds” by integrating Twilio with Acumatica, which added voice and SMS notifications to Acumatica business management processes.
The project module and source code are available here.  To get a full sense of all that was accomplished by software developers in a brief four hours, read Marco Villasenor’s guest blog post.
Frankly, we were blown away that a small group of developers could produce such great results in such a short time.  The hackathon immediately became the talk of the Summit, and our CEO announced the winning teams in his opening keynote on Monday morning.
So of course we had to do it again. This past year’s hackathon was expanded to a full afternoon and evening of coding on Saturday and finishing up on Sunday. We announced three winning teams this time. Here’s a quick summary of their projects:

Simplified & extended e-Sign integration, which is a unified eSignature integration for Acumatica Cloud ERP that supports DocuSign and Adobe Sign. This team took the source code we originally published in GitHub here, and minimized the manual steps/clicks and further automated the sending out of documents to be signed.
Integrated facial recognition into the approval process within Acumatica, demonstrating how easy it is to extend the xRP platform by integrating Azure Cognitive Services to add facial recognition to approvals.
And the grand-prize winner, judged to be the “best of the best,” took the biggest risk and leveraged a router and a Raspberry Pi device to host an Astrix VoIP Server, managed by FreePBX– a web-based open source GUI.  They were able to integrate these into Acumatica to provide click to dial and returning contact information for caller ID.  They created activities for inbound and outbound calls, using push notifications to pop up-contact record for incoming calls or create a new contact for unknown callers.

All of these solutions were very impressive – especially when you consider the short windows the teams had to work with. Best of all, the projects had immediate relevance to customers, showing them what is possible to build and consume. To see a complete recap of the event go here.
These hackathons offered not only a venue to show off our platform and our partner developer’s skills, but also an environment to build relationships in our developer community and show some creativity and problem-solving skills among teams of developers.
Bringing a hackathon into a business conference isn’t for the timid, but you can’t build a better community if you don’t learn how to mix different constituents. Keep in mind, however, that the hackathon is just the beginning. You can light a spark, but you must reinforce it with ongoing developer engagement throughout the year.
How to keep developer momentum going
For developers to be efficient in their development efforts, knowledge of the platform and having the tools they need to get product to market, meeting deadlines, etc. is dependent on the accessibility of technical documentation and undocumented tidbits they can use to solve development challenges they inevitably run into in the course of their development efforts.
At Acumatica, we have found that sharing knowledge of the platform through free in-depth online and in-person classroom developer training for developers, by developer, is very effective. We do that on the Acumatica Developer Network.
We also document advanced developer techniques, delivering those tips and tricks from seasoned developers and leaders within Acumatica –content you can’t really find in documentation or training.  It’s unique and powerful content that developers really need and can help solve difficult developer problems.
Developers count on being exposed to the latest and greatest. It’s important to devote keynote time to what developers can expect. We had two of our founders present on what developers can count on in the near and longer-term future onstage. Keynote coding demonstrations give credibility to that vision.
Finally, you can’t just give developers a roadmap. They need to feel they are influencing that roadmap as well.  Like rallying and more importantly, listening to your base in politics, listening and rallying your developer base is key to adoption of a platform and sustaining its viability
Having an MVP program to recognize the top contributors to your developer community is a way to acknowledge the great work individuals make. It also gives them a platform for the valuable feedback they have to offer. Companies make a big mistake if they don’t take the feedback of their leading community developers to heart.  We meet bi-monthly with our developer MVPs, sharing knowledge with one another. We have a “bug-bash” type session going over Stackoverflow, and problem-solving unanswered questions.
Any company that is serious about building or adding to a platform needs to figure out a way to bring developers into the mix. Show them the love!  Show them you care! Be honest and consistent.  Provide tangible evidence of how their contributions impact product direction. Developers won’t just show up and start coding. But with the right platform and a central place in your community, your developers will shine.
Image credit - Feature image - People are joining hands together as a teamwork by @Rawpixel.com - from Shutterstock.com.  Acumatica hackathon photo from the recap blog post on Acumatica.com.Disclosure - Acumatica is a diginomica premier partner.Read more on: AcumaticaCloud ERP financials and supply chainCloud platforms - infrastructure and architectureDevOps NoSQL and the open source stackPartner Zone 