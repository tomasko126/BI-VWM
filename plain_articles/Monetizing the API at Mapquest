
Mapquest maybe tiny in comparison with Google but that doesn’t stop it from offering business-to-business and consumer experiences that compete well in the market. Now owned by AOL, Mapquest is looking for fresh ways to monetize its assets in a way that’s transparent to developer organizations. This dovetails to its open development approach which is designed to get as many developers connected to Mapquest’s API solutions. Managing those APIs is something the company chose to pass over to Apigee. Jennifer Kinney, CTO Mapquest explains:
We either needed to buy versus build and we decided to buy because, for us, we wanted to focus our efforts and our resources on building really awesome APIs versus working on the provisioning, working on all the analytics that go along with that, basically, what this platform really brings to the table.
Build versus buy decisions are rarely easy and especially when you have had a custom solution in place for a number of years. Kinney says that it was much easier for her company:
We know our sweet spot is API development in the spatial and location services area so we’re always going to focus on that area to the extent that we can and we’re going to grow partnerships with companies like Apigee to really extend our business with platforms that already exist.
We want that to be as frictionless as possible. We want the startup community to come to MapQuest and start using our APIs because they can get a trial, they can get something going very very quickly. The same for enterprise users. We want them to be able to use our APIs and leverage any new APIs that we build because we just have really strong design in the APIs.
Mapquest’s business model is built around the number of API calls made. This allows developers to start for free, test and then grow. Mapquest wanted to ensure that growth process is made as simple as possible but without sacrificing revenue. Kinney says that Apigee’s management products allow it to achieve that objective, moving customers from one plan to another in as frictionless a manner as possible. But what of the future?
Kinney thinks that there is room for innovation in the geospatial area as core business users in fleet management become more sophisticated in their use of sensor technology:
If you think about the core of what we do in our navigation apps, it’s really all about location and being able to adjust based on location and being able to provide great estimated time of arrivals, great traffic influenced routing, great search capabilities. All those things empower our own applications and those are our own APIs that we built that we’re now selling for B2B customers.
What about customer experience because in today’s world, that is the way organizations differentiate:
Customer experience is a big deal. We know we can compete from a technology perspective but we have to have this differentiator on the customer experience and developer experience side. It’s just something that we work on every day, I mean, we wake up and we think about it and we go to sleep and we think about it. It’s part of our culture.
Where does Apigee fit into this equation?
We are going to continue to evolve our implementation by using some R&D efforts we’re going to run through Apigee. What’s great about the platform is it gives us an early read like if we were testing something in our new product or we’re testing any new API, we can run it through Apigee and we can get all the operational metrics, we understand how it’s being used and that helps us inform decisions of our next steps for that particular product. We’re going to do more of that. That’s where I think it’s super helpful.
Removing friction from any customer experience is welcome. It is becoming part of the expected delivery experience. But equally, that requires management on the back end. From everything I heard, Mapquest is optimizing its resources with Apigee as the trusted partner helping it serve up four billion API requests each month. That’s true webscale.
Read more on: Analytics planning and data analysisDevOps NoSQL and the open source stack 