
Imagine if it were as easy to deploy a new instance of your ERP software as it is today to deploy a new virtual server in a cloud data center. While devops-style automation has shortened the timespan of server provisioning from weeks to minutes, deploying enterprise application software still means wading through reams of documentation and spending days or weeks getting the technology just right. Being able to skip that step has been a huge factor in making cloud-native applications a popular alternative.
That could all change if a new open-source project lives up to its promise. Last week Chef Software, one of the pioneers of standardized IT automation for cloud data centers, launched Habitat. The new project promises to allow enterprises to provision and deprovision complete applications as easily as its original infrastructure-as-code project stands up and takes down virtual servers in a cloud data center.
Habitat is the brainchild of Chef co-founder and CTO Adam Jacob and had been secretly in development for the past 9 months in preparation to show a working product at last week’s launch. It currently runs on Linux and MacOS, and Chef is keen to work with Microsoft to build a port to Windows.
‘Hairiest’ enterprise applications
Several customers have had early access as part of the pre-launch testing process. While some are classic ‘Big Web’ businesses that have been using Habitat to deploy web applications, others were selected for their readiness to test the tool with what Chef executives describe as “the hairiest” of enterprise applications, including ERP packages.
According to Jon Cowie, staff operations engineer at e-commerce marketplace Etsy, who I spoke to by phone last week, Habitat shines in its ability to allow deployment to different environments without modification:
We are primarily an on-premise, bare-metal infrastructure. Habitat doesn’t care if we’re deploying our application containers on bare metal or cloud or PaaS. It’s non-specific to what you’re doing under the hood.
Habitat works by deploying applications within a package that knows all of the software’s dependencies and configuration options, managed by a supervisor that knows how it needs to behave with other components. Explaining what this means in practice, Cowie cited the demo in the announcement webcast, in which Habitat manages the deployment and service discovery of a cluster of 3 Redis in-memory databases each running in separate Docker containers:
I don’t have to invent all those pieces to tie it together. All those ancillary pieces — service discovery, orchestration, exposing configuration settings, how containers are started — Habitat takes all that duct tape out of the way and does it for you. It makes it easy for you to decide how you want to do things.
Removing the ‘production cliff’
In other words, Habitat standardizes and automates a lot of the manual work that has previously been needed to deploy applications within a Chef environment. This eliminates what Chef describes as the “production cliff” of infrastructure and management software preparation that’s typically required as an application approaches production roll-out. Instead, operations teams simply declare the topology, update strategy, and configuration options to the Habitat supervisor and it all gets folded into the automated deployment process.
For Etsy, which operates thousands of servers in its data center and deploys new code as often as 60-70 times a day, there’s a strong use case around how it builds and organizes mySQL databases, says Cowie.
We can look at encapsulating our databases as Habitat containers and have Habitat do the service discovery piece. You’re not having to transplant the service discovery framework into an existing architecture and write it in.
The key breakthrough with Habitat, according to Chef, is this notion of wrapping the automation around the application so that it can self-organize and self-configure, rather than putting the automation in the underlying platform and requiring manual adaptation to accommodate each new application.
Everything the application needs, from build dependencies, run-time dependencies, configuration, dynamic topologies, deployment strategies, secrets management, security auditing, and so on belongs with the application, because we’re doing it for the application. Runtime and infrastructure layers exist to support the application, but the efficient building, deployment, and management of the application are decoupled from those layers.
Wired’s Cade Metz writes that the concept could be as revolutionary for application management as the invention of the SmallTalk programming language was for application development — a seminal moment for the emergence of object-oriented programming, which underpins all software today. It embodies the same biological principle of enabling “a vast collection of self-contained pieces that work in concert,” he suggests.
My take
Before we get too excited about Habitat, let’s remember that it’s only a week old as an open-source project and no one is currently using it operationally for routine production. The next few months will surface the issues that still need to be ironed out and where its limitations are, when applied to conventional packaged enterprise applications. Clearly, it’s going to work better with applications that are natively architected to operate in a highly scalable devops environment.
But having made those caveats, Habitat does appear to be of significant interest for IT operations that are exploring hybrid environments and want to be able to move applications more easily between on-premise and managed cloud or public cloud data centers. If it can significantly reduce the time required to implement application instances into production, it may also make a big difference to the cost and complexity of on-premise upgrades. That could really shake up the comparative merits of staying on-premise versus migrating to cloud-native applications, to the detriment of cloud vendors.
In the continuum of two-speed IT, devops has hitherto been seen as the sole preserve of the faster end of the spectrum. If Habitat really can fulfil its promise, it may help bring more of a devops mentality into the heart of enterprise IT. That could have very interesting ramifications.
Image credit - Feature image - Cook with flaming pan © Viacheslav Iakobchuk – Fotolia.comRead more on: Cloud platforms - infrastructure and architectureDevOps NoSQL and the open source stackIT service managementUX and application design 