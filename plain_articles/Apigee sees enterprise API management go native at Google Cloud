
Chet Kapoor, Apigee
A trend highlighted by Salesforce’s acquisition of MuleSoft is the growing importance of APIs in the enterprise technology landscape. Someone who can bear witness to that trend is Chet Kapoor, CEO of API management vendor Apigee, which Google acquired in late 2016. When I caught up with him last month on a visit to London, it was almost a decade since we’d last spoken. After more than ten years as CEO, he’s seen a big change in the perception of APIs in the past few years, he says:
There’s definitely a mainstreaming that’s starting to happen.
Four years ago we would talk about business transformation, digital transformation. Now the number of conversations I’m having with business executives and board members around API programs is mind-blowing.
While many of the early adopters were managing the delivery of external APIs to partners and customers, there’s a growing recognition that a successful API infrastructure is a continuum between internal and external operations, he says. This recognition that APIs are core to a digital strategy is now spreading across all industries, including regulated industries such as financial services, healthcare, insurance and government, he adds:
The maturity of the API space I think brings customers we were not talking to before. They’re not exploring, they’re actually saying, ‘I know I need it.’
It’s because of the pull that the market has for the API tier. It’s not just the early adopters, it’s the late majority that is starting to participate.
Enterprise API management learnings
Many of the learnings that originally came from managing external APIs have become more relevant inside the enterprise with the spread of more iterative, agile development methodologies. This has meant that integration becomes more of a continuous process that’s better managed as a set of APIs rather than being seen as a series of discrete one-off projects, explains Ed Anuff, Director of Product Management at Apigee:
APIs have transitioned from this idea of projects to products. External APIs were a wake-up point for a lot of firms that there was a way to create and manage APIs in an ongoing way.
A lot of what we found about API management as an approach ends up being very different from a lifecycle perspective and a business outcome than you’d see from a conventional integration product. That’s why you see folks from the API management space who are strong on external APIs being brought in to manage internal APIs as well.
The IT industry now understands the three key principles of how to build APIs “the right way” to support continuous integration, says Anuff.

A productized API that comes with an explicit service level agreement attached to it, so that both the consumer and the provider can track and analyze usage. “API productiziation is taking this idea of components and really making it very concrete.”
APIs are built for reuse. There are core API primitives that are broadly accepted — an API has discrete functionality, it’s easy to learn and reuse, it can be incorporated into a new application very quickly, with no unexpected side effects. “We now know these things have to built in a much more reliable way.”
APIs are increasingly very fine grained. “People are talking now about microservices.”

Going native at Google Cloud
One aspect of the microservices conversation is the rise of ‘serverless’ computing, also known as ‘functions-as-a-service.’ That’s an area where Apigee will be applying its expertise alongside of Google Cloud, says Kapoor:
You’re going to see a lot of the utility of serverless exposed at the API tier through some of the work that Apigee is doing.
Serverless is a way of componentizing functionality that’s well suited to the cloud environment, says Anuff.
Serverless is saying, I don’t need to build the whole thing. I can just define what behavior and logic I want in response to certain triggers. In the cloud we’re learning what those triggers are — for example, an API request comes in and I attach event logic to it.
The rise of voice assistants and conversational interactions provides a good fit for a serverless platform, he adds:
A platform for that ends up looking a lot like serverless. Once you start thinking in that way, you start getting less interested in big stacks of code and more about small bits of work that need to happen in response to certain interactions. We think this is very big.
My take
When Google acquired Apigee, I said at the time it would be an important test of Google’s enterprise ambitions:
[W]hile Google can be considered one of the pioneers of web APIs, it lacks pedigree in providing the kind of API management capabilities that enterprises demand. It’s one thing to deliver APIs at scale, which is Google’s strength. It’s quite another to give people the tools to monitor consumption, track performance, ensure compliance with service level agreements and collaborate with downstream partners.
Apigee’s strength is in managing APIs at scale, which is why its roots are in managing external API delivery. That stands it in good stead as APIs become an important part of internal IT delivery, where robust management at scale is just as critical.
It seems that Google has allowed Apigee to flourish since the acquisition as demand for its capabilities continues to expand, even before packaging Apigee with Google’s own offerings.
What will be interesting now is to see what emerges in the field of serverless, as Kapoor hinted, since this is a new opportunity for Apigee to apply its talents to a native Google Cloud offering. The overlap with conversational computing is another area to watch. A new chapter in Apigee’s journey as part of Google may be about to begin.
Image credit - via the authorDisclosure - Salesforce is a diginomica premier partner at time of writing. Read more on: Cloud platforms - infrastructure and architectureDevOps NoSQL and the open source stackInfrastructureIT service managementUX and application design 