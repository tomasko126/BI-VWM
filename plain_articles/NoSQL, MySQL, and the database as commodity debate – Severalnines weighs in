
I’m not a fan of “hot take media,” but a provocative question definitely has its place. At MariaDB’s user conference, I broached the question of databases as commodities – even great databases. MariaDB executives took issue with the question, making their case as to why databases aren’t a commodity now – and won’t be anytime on the horizon.
My provocateuring didn’t come out of hot take thin air. I was inspired by “NoSQL” vendors like MongoDB and Datastax, who are clearly diversifying business models beyond database tools/support (Example: see my colleague Derek du Preez’ DataStax CEO launches new CX strategy – focus shifting from tech to business.)
Commoditization and cloud database lock-in – where is the value-add?
After that show, I got a rare thing indeed: a compelling PR pitch. It came from Severalnines, framed around this debate. Now, just like MariaDB, Severalnines has a dog in this fight, as their company, billed as an “all-inclusive open source database management system,” gives customers the ability to deploy and manage multiple MySQL, Postgres or MongoDB databases on-prem or in the cloud. Severalnines would point to a different kind of value-add on top of the database, rendering the underling databases as more interchangeable – thus a commodity.
Saying “you were right to call out MariaDB,” Severalnines’ external PR firm went on to say that even good databases have “weaknesses that can be detected by the trained eye.” They cited the example of the MongoDB security issue that flared up in the beginning of the year, primarily due to MongoDB administrators not enabling security features:
The problem could have been prevented if IT pros had more eyes and time to look at the installation. Value add here is in the fine tuning to make sure good databases are relevant to each individual business.
Severalnines’ pitch went further, arguing against “the revenge of SQL databases.” That was another theme in my prior piece: SQL and NoSQL databases are converging and lines are blurring. Severalnines doesn’t believe the need to manage “NoSQL” environments is going away:
There isn’t a revenge of SQL databases. The likes of MariaDB, Oracle, and IBM databases have to live in the harmony with MongoDB, Cassandra in an enterprise architecture. So businesses need to have the talent/technology to run both types of databases. [Severalnines advises] businesses to be polyglot persistent to ensure they get the best of applications which run on SQL and NoSQL.
Then Severalnines raised an issue I hadn’t covered: a different cloud lock-in danger with SaaS vendors.
However, end users of cloud services are sleep walking into trouble as vendors only offer their database operations tools. Severalnines wants to stop cloud lock-in before it starts by providing best of breed cluster management, monitoring and deployment tools.
Companies “pay the bill in terms of downtime”
Obviously this reflects Severalnines’ self-interest, but it’s something to chew on nonetheless. So a few weeks later, when Severalnines CEO Vinay Joosery was in the US, we hopped on the phone to flesh this out. In particular, I wanted to know his views on the prior AWS outage on the east coast.
There are two key points driving Joosery’s views. The first? As companies push into multiple digital projects – often on different systems – they need a “database layer” to manage them:
From an enterprise customer point-of-view, you are looking at solving a problem. You need a data layer right now… It’s about how easy can you make it for the companies to use your technology, to deploy it, to monitor it, to understand when there are problems.
Advances in machine learning can help by automating more and more tasks, such as auto-tuning databases for performance. Joosery believes companies have an availability problem:
Many companies are running poorly, considering the infrastructure. Not very good availability – then they pay the bill in terms of downtime.
Joosery’s second point: if you are a FANG type, (Facebook, Amazon, Netflix, Google), then you have a big, sophisticated tech team to fine-tune your architecture. You can build your own performance management tools. Joosery says most companies aren’t in that position: “You need a product to do that.”
For all the virtues of open source, you can run yourself ragged assembling all the components you need to manage trending, real-time monitoring, auto-backup scripts, another script for upgrading – and then you have to figure out how to encrypt replication.
Joosery doesn’t see any lack of interest in NoSQL databases for digital projects. But he does see a kind of backlash as customers realize they aren’t ready to scale.
They begin to understand the pain from managing all that. At that point, you just have to scale back, go back to reality in a way, and say, “What is that we can manage comfortably, for us?“
As for cloud database lock-in, there are many angles to consider. Two big ones: the ability to easily manage hybrid data deployments (on-prem and cloud) and to quickly shift workloads between cloud infrastructure providers. The AWS outage on the east coast was a provocative example. Plenty of companies experienced downtime there, evidently content to depend on one Amazon data center for their operations.
But were they really content? Or were they just avoiding the complexities that maintaining redundancy entails? I asked Joosery if they can solve for that:
Yes. Basically, you can just take and clone your system, and take it somewhere else. Typically, when you’re using the service of a cloud vendor, you don’t have access to the physical back-ups. What you can do is is to say, “Spin me another instance of the data.” But it’s still within the service, right? Our idea is to be pretty open from that perspective, and say, “You want to move your data to Google or on-prem? Just go ahead.” Because we know that once you start running something, the data grows. Try to get data out of RDS Amazon when you’ve used it, and you’ve got more than 100 gigs. It’s pretty awful.
My take
We talked about Severalnines’ 160+ live customers. Large companies with high availability needs are the sweet spot, but not all companies with high availability needs are global names. Take StreamUK, a Severalnines customer, and a streaming provider for clients like the UK’s English Premier League – no downtime acceptable, unless you want some rabid football fans clogging your inbox. Joosery also spoke of Severalnines’ value for compliance-heavy industries like healthcare:
Healthcare payments, you know, these are highly regulated, so you can’t afford to have somebody download scripts left, right and center. You need to prove to auditors that you have control of your database. How do you know its secure? How do you know who has accessed it, and when, and what operations they performed? How do you restrict functionality to people on a minimal functionality basis?
Since we talked, Severalnines announced an integration with ProxySQL, an open source load balancing tool. I’ll be interested to learn more on their planned DevOps services in the year to come.
Reflecting back now, the commodity argument could be turned on Severalnines eventually, as open source database management matures. I see some ways around that, such as analytics based on aggregated intelligence from their clients, premium offerings, advisory services, and so on.
Turnabout is fair play. In our industry, the critiques we apply to others can usually be turned on ourselves. Most who wind up in the winner’s circle won’t be the best solutions as of today, but those who are best at rethinking/adapting.
Updated with minor tweaks for readability 8pm PT, June 1.
Image credit - Microfono tenuto in mano conferenza © ALDECAstudio - Fotolia.comDisclosure - Diginomica has no financial ties to Severalnines. But like I said - they had a meaty, issues-oriented pitch.Read more on: Analytics planning and data analysisDevOps NoSQL and the open source stackNoSQLOpen source 