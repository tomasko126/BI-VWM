
Enterprise application integration (EAI) has always posed a challenge for IT departments. Fundamentally, it involves getting multiple data sources to communicate, regardless of whether they share a common language or organizing syntax – no easy task. CIOs are continuously faced with the issue of how to create an application integration strategy and manage it for long-term growth.
With the advent of cloud computing and new digital platforms, it’s time for a fresh look at EAI. These integrations increasingly have to support real-time connections, while remaining adaptable to change. The technology becomes an enabler for connecting applications, data and people in order to achieve business goals.
Integration becomes critical
As data is now among the most valued assets an organization owns, integration becomes critical. It can connect the various enterprise systems of record and keep data synced and in a consistent state so that meaningful and relevant information is available to users. This is easier said than done – integration of enterprise applications can be complex and resource-intensive. The integration process requires solutions that adhere to both technology and business requirements, and they have to be built on a flexible model that enables them to adapt to change.
The requirements for pulling together data in the cloud from disparate sources increases in complexity as enterprises deploy more applications and data repositories. Integration of applications therefore almost becomes a math equation – ensuring that different types of platforms and architectural styles work seamlessly, and that their coupling is capable of working with new technologies, never-ending maintenance, and ongoing support.
As enterprises do more with data they need to consider integration as a continuously moving set of processes, rather than as an isolated activity to be checked off.
Necessary, but not necessarily complex
Earlier methodologies for enterprise integration aimed mostly at getting data either into or out of ERP, CRM or other monolithic applications. Before there were recognized standards, this required custom development. The advent of application programming interfaces (API) enabled more connectivity among applications, but often still required integration at the data level using SQL and flat files. It wasn’t until the onset of standards like Simple Object Access Protocol (SOAP) and Representational State Transfer (REST) that enterprise application integration could be done with a level of both consistency and flexibility.
CIOs today can establish and direct a sustainable integration strategy by focusing simultaneously on the applications they use and the needs of their stakeholders. The key is to use flexible technology solutions that allow integrations to be applied as the enterprise’s needs change and grow. Cloud applications can leverage advantages, especially when enterprises want to support digital transformation projects. In this environment, adhering to open standards will yield not just faster results, but will ensure that connections to data will always be available.
Organizations that are serious about creating an integrated cloud application strategy to support business digitization initiatives should start by considering four principal elements:
1. Aim for reusability
Reusability is an especially important concept when it comes to making cloud integration easier. Services that are separated into component parts can be combined to form new applications. These ’parts’ can be shared and reused concurrently with other applications.
Consider, for example, an integration that loads data from a time clock about employee activity. This would comprise services that access a time clock system and that can also retrieve the daily activity for an employee. If a similar version is needed that can access weekly time range rather than daily, much of the same logic can be re-used and offer additional functionality to users of the service.
Having a reusable services-based model for integration makes it easier to enable more digital channels for your business, especially when those channels connect in the cloud.
2. Use standards to make integration easier
Most applications are now made with reusable services and adhere to industry standards like SOAP, REST, and other web services. These standards provide an application framework that is compatible with growth and change. This creates an easier path for integration developers and ultimately creates an easier way to create data interaction opportunities. Developing with a standards-based approach ensures some level of consistency and interoperability. This simplifies integration development, and creates a more sustainable, integration-friendly infrastructure.
A standards-based approach to integration provides uniformity in how services are built and used. These types of services can then manifest their capabilities in the form of APIs, and form the baseline for integration and data access across multiple different systems of record.
3. Make use of connectors
Pre-built interfaces, called connectors, reduce the implementation and maintenance time to perform end-to-end integration. They contain the processing logic, data transformation, error-handling, and any of the other elements that create a connection to the data and protocols that are specific to an application.
Application vendors should treat connectors as products, because they must be developed, maintained, updated and managed just like any customer-facing tool. Enterprises may deploy a variety of applications that may eventually have interdependencies. Therefore they should seek vendors that provide an agile framework with multiple entry points to create these integrations, using connectors, wizards, or a full-blown integrated development environment (IDE). This gives the customer control over integration capabilities while leaving connector management to the vendor.
Sometimes, rather than using the vendor’s own connectors, enterprises use third-party connectors, which require their own type of integration. Care should be taken to assess how development work for those connectors can be replicated to other integrations. There is less custom development needed when a vendor provides pre-built application connectors that are specific to its application, but that adhere to industry standards and are flexible.
4. Connect across an ESB
As web services evolved and were adopted far more broadly, the Enterprise Service Bus (ESB) emerged as a way to manage the communication and transactions among different applications. An ESB sits on top of the integration architecture and operates as a conductor of interactions, irrespective of application function or architectural structure. By design, an ESB must be flexible in how it enables data and communication transactions.
A modern ESB provides universal and open standards-based connectivity among applications, data, and business processes. Providing much more freedom for data, an ESB also aids integration management because it can monitor, secure, and regulate how data messages are transmitted among services and components.
In summary
Planning an integration framework that paves the way for new digital channels can be complex – it requires a holistic view of your IT environment, and a disciplined understanding of what you want to deliver. Yet, by asking the right questions and taking steps to ensure that a flexible and robust set of tools will be available to you, an enterprise can dramatically reduce distractions and deliver valuable solutions through integrated application data.
Image credit - Business man with smartphone and digital waves © everythingpossible - Fotolia.comRead more on: Cloud platforms - infrastructure and architectureGoverning identity privacy and securityPartner ZoneWorkday 