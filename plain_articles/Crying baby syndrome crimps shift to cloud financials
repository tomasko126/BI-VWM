
Mark Nittler and Den Howlett sharing a joke in 2013
Anyone who has been a parent knows the misery that comes with a crying baby. You know the one who never seems to sleep, the one who wakes at the most g-dawful time of the night and refuses to go back to sleep or who yowls for what seems hours on end. Managing that situation is exhausting to the point of desperation. Parents will do anything to get the child back to sleep.
The crying baby
You’ll throw the other kids out the house, stop speaking, mute the phone, turn off the TV, take any and all legal (and sometimes illegal) highs just to keep awake long enough to get the wailing child back to sleep. Kiddo is due for a feed but is asleep? No way are you waking them up. Kiddo is awake at 3 am and wants you to endlessly spin a mobile toy. You’re going to do it. Anything that will make sure the baby doesn’t cry and goes back to sleep. Because in this scenario, you are within inches of losing your mind over someone you love very dearly.
That’s exactly what it’s like running enterprise financial software. It’s not broke so we’re not fixing it. We know it’s going to break but as long as it’s not breaking today then we’re going to leave it alone. We know the business wants answers but we’re only going to give the answers we can today because providing the answers for tomorrow means breaking it. And I can’t break it. In short, please don’t wake my crying baby.
Does that sound like madness to you?
It may do but you’ve got to remember that the finance department doesn’t work for you at least 50 percent of the time. Most of the time it is trying to keep half a step ahead of regulation and compliance while making sure everyone gets paid.
Finance thinks that it solved its big problems in the 90s by having the SAP’s of the world bring together and aggregate data for AP, AR and GL. And it did, albeit the journey turned out to be a lot more painful than was originally anticipated. Finance thinks that because AP, AR and GL work today then they’re kinda set, even though they secretly suspect that isn’t quite true.
Laggards or captive prisoners?
Uneducated and/or just plain ignorant commenters who talk about transformational shifts, often characterize the finance department as laggards. It is far easier and potentially amusing (aka headline grabbing), to sneer at the office of the CFO as ‘those bean counters,’ than understand what’s really going on and why there is institutional resistance to cloud-based financial technologies.
Vendor strategists angst over this topic because it is well understood that ‘he who owns the transaction owns the business.’ It’s also well known that despite years of technology innovation across multiple disciplines, it is technology spend in the finance office that has dominated the applications software budget. Accounting is the one corporate activity that is never optional. You don’t need CRM or HR admin or a bunch of other stuff in every business but you do need accounting.
Serendipitously, I ran into Mark Nittler, VP strategy at Workday. We share strong accounting backgrounds and have talked around this subject on and off for many years. The resistance to change topic is a perennial discussion between us. The crying baby syndrome is how he characterizes the finance office dilemma following more than 800 meetings with finance officers. They all know they have to change stuff and contrary to popular belief, many of those same CFOs ‘get it’ in some measure. As long as it’s not required of me today.
How did this happen?
History lesson
In the 1990-93 timeframe, SAP solved an obvious problem that allowed it to displace McCormack and Dodge, Dun & Bradstreet and others that, at the time, dominated the enterprise software market.
SAP’s stroke of genius was to tie AP, AR and GL together into a single, workflow based system. Others followed suit with what is really a document based data model predicated upon working off a single server to a small number of clients.
It worked but it was, and remains, inherently cumbersome and rigid. Once you’d figured out the accounting code block then you sure as heck didn’t want to go back and try change it. Or, as Bruce Richardson, now at Salesforce, but one time industry analyst par excellence at AMR once said to me:
Once you’re done, you want to concrete the sucker over and hope you never have to dig it up
Amen to that.
Frankensoft’s scourge
But as the business demanded more functionality, as successively reporting, budgeting, planning and forecasting swept into view, so the intellectually simple model upon which financial software was built in the 90s, became increasingly difficult and complex to both build and maintain. Or, as Brian Sommer described, and Workday co-opted, the whole thing became Frankensoft.
Today, we see the resurgence of integration technologies for both on-premises and cloud based systems as buyers continue to stitch apps together in the hope they can provide business with what it needs to make decisions. That’s fine a lot of the time and especially today when we weigh that option against the number of emergent systems coming to market.
In short, integration is a useful sticking plaster while the rest of the world figures out what the core application landscape looks like and who the builders of that landscape will be. Integration provides an enduring excuse for finance in particular to march time rather than take the a hold of the crying baby and nurture it towards childhood and on into adult life.
Can we wait?
During our discussion, Nittler posed a really interesting question to which no-one has a demonstrable good answer today. With all the demands and flows of data coming at the business, how well equipped is finance to respond to tomorrow’s needs? What does digital business mean for finance? For instance, based on the data I have, can I understand the relationship between 20 million buy actions on my website to completed transactions AND understand the financial impact across SKUs such that I can dynamically price at the line item level? By the way – that’s a real question not one we faked up.
Most of today’s finance systems cannot answer those questions very well without developing a shitload of spreadsheet data and ad hoc visualizations. That’s because the architectural assumptions upon which finance was based are all designed to lead up to an aggregated summary for reporting purposes, sans reporting per se. Aggregation is the enemy of understanding. And integration to whatever reporting tool just makes life messier.
I argue that if we want to answer the hard questions then we must have a good way to atomize data not just back to the pre-journal entry level but further back to the point of initial contact in the buying journey. In other words, we really need that end to end visibility and transparency across and through business processes that ‘old’ ERP was supposed to provide but which was over-run by what the Internet and data ubiquity have enabled.
Nittler argues this is only possible when your software is designed on an object model basis, rather than from the data model perspective. It is a fair point because in shifting the discussion to programmable (and tag-able) objects, you free up the data from design constraints that otherwise lock it down into an AR, AP and GL template.
My view goes a bit further. I get that there are logical ties between HR and finance that make a combined object model for those processes an attractive idea when applied to service industries. Workday would say that anyway – it’s their design schtick. But I also think this has to be extended into the CPQ space as a logical progression in the atomizing argument. That is one of the reasons I was taken with Salesforce’s Steelbrick acquisition.
The sniveling teenager
All this intellectual theorizing is fun stuff but where does it get us?
Today? Not quite far enough. Nittler has always made a compelling case for embedded analytics as part of the Workday offering. Its expansion in to EPM with the as-yet-to-be-released analytics solution remains an obvious if unproven solution.
These more traditional looking functional plays satisfy the immediate interests of the primary buyer but I’m not sure they will sway the enterprise viewing buyer of tomorrow. That’s the one who has got past the crying baby thing and is now dealing with the enterprise sniveling teenager and who want their data needs met right now.
I’d like to think that tomorrow’s software vendor can talk a better game than one that does what was done yesterday albeit faster and possibly cheaper. I’d like to know how many of the financial processes can be fully automated so that I can free up resource to concentrate on solving tough problems from inside the business rather than hiring consultants as the Band-Aid to counter constraints. I’d like to know how best to use tags so that I can at least start the atomizing process.
Those are my starting points.
Disclosure: SAP and Workday are premier partners at time of writing.
Read more on: Analytics planning and data analysisFinancials 