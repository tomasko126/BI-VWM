
Legacy applications – RIP
Nutanix President Sudeesh Nair has his mind closely focussed on a roadmap of the next three or four years. This is the period when the hegemony of the legacy application is likely to find its demise as the emphasis on the efficacy of technological complexity alone crumbles and the age of functional, intent-based solutions comes to the fore.
It is a subject on which Nair is not short of opinions, and they all point towards a major sea-change coming in the way businesses see and use IT to achieve beneficial business results. The old legacy applications model has, in his view, just about run its course, and users need to be ready to adjust, or risk getting left behind: 

What we have done as vendors is go to customers and scare them by saying ‘your business has become more and more technology driven’. So you need to buy my latest something. We will take your money, run out for the next three years, and then come back and take more money away. This has been going on for a while.

Nair uses the classic utility services model to make the point. Only the largest, most specialized of businesses now contemplate investing in building their own electricity supply. 
The same model now applies to IT – the core resource requirement is pretty common, even if specific requirements vary widely. That is the classic argument in favour of the cloud, its speed and flexibility of provision, and its cost and the consequent redeployment of investment capital. Nair says: 

If you think about it, you can go to Azure, click twice, and your SQL server is started. On premise, you need to write an RFP or RFI, then do 10 months of work, and when it finally starts find out that performance isn’t optimised. You call the vendors and find that they are all fighting with each other. By the time it’s corrected, it literally takes a year. And by that time, in today’s industry, plus one year means it’s already obsolete and there’s better technology out there.
Amazon Web Services released 516 features last year. How many features did industry leading technology vendors in our sector release? So as long as this is the delta, customers would want to go.

But he sees users being stopped from making the move for four reasons: security, privacy, cost and legacy. Inevitably he sees Nutanix as having a solution which can bridge the gap between those sheet anchors holding users back and the potential that cloud delivery can offer:

It’s very simple for us, it’s a two-step process. Number one, equalise the experience in both places. So that people who are going just because they are sick and tired of this bad experience will find reason to stick with it. This is why we stopped talking about SAN, then we stopped talking about storage systems and servers and then last year, we stopped talking about hypervisors.
Things like hypervisors are details that customers should never know about. If you go to Amazon you never imagine what hypervisor they’re running. So the last four years were spent on taking four stacks – storage, compute, networking and hypervisor – and making them invisible. I don’t want any of our sales staff to go out and talk to customers about any of these details. 
I know the rest of the industry is waking up and thinking hyper-converged is the next best thing. I don’t really care about hyper-converge. To me hyper-converge is the software-ized version of a box. Customers don’t care about the box. So what you have now is a simplified way. 
This is important because when you simplify and make the stack invisible, one thing that we always talk about is web-scale, and people don’t always understand what we mean by that. What we mean is that our metadata can elastically expand and shrink to thousands of nodes, which means we are building the infrastructure for a public cloud-like architecture in the datacenter. 

Prism
The second factor in play is Prism. Prism is a bridge so that new and legacy applications can go run and come back. This is the thesis behind app mobility fabric, which is a way to take archaic legacy applications, instantiate them on the users’ choice of cloud, run it for as long or as little as needed, pay for as much or as little as the budget allows and then bring it back. Thus, Prism becomes the single point of orchestrating, automating, visualising, remediating and managing applications whether running on premise or off, in containers or VMs. 
This is what the company refers to as intent-based architecture and opinionated design model, where the object is to focus on what a user wants to do – for example, start an SQL server – and why they want to do it – produce the next invoice run. Those two questions can then be answered by delivering the entire infrastructure required for the job with one click. Nair explains:

So basically what we’re saying is; don’t tell me how you want to do it, just tell me what you want to do. For example, you say you want to run a database for data warehousing as opposed to a SQL  transaction. This is like invoices versus searching. Those inputs are very important because I will design and run that application very differently.
For example, if it is a warehousing application the optimization will be oriented for search. If the task is storing images it is optimised for SQL Server streaming performance. If it is running invoice credit checks against a database it can be run on a flash-based random access optimised device. If the application is critical, high availability can be designed in with the same click, while if it is just application testing resources might be reduced.

Over time these few intents, and their optimizations, can lead to the development of opinionated designs. These are based on what is found as appropriate for 95% of the customers. Nair states bluntly:


I don’t want to give you any choice. I don’t want you to clutter your mind with the unnecessary choices included in the infrastructure. So for example when you say it’s for production, I will not ask you how many (IOPs) do you need, or should I use flash, or this or that application. I’m just going to make some decisions. Then I’ll use analytics as what you say changes.
People say why did Nutanix build Acropolis hypervisor, why did we build Prism? It’s basically stepping stones to developing intent-based architecture and opinionated design. This is absolutely about removing unnecessary end-user decision points that are irrelevant. 

And it’s something that’s been going on all around everyone, he adds: 

When you were using an older Windows machine, you’d go to My Computer and double click: Program files, double click: next one, double click. Then you find your file and you click open. You kind of know the folder structure, and you know your file remains in this specific folder in this location. You were spending your memory on that absolutely useless information. On your iPhone or your iPad, you don’t know what the folder structure is, and you don’t care. You just click the app. 
“So cloud guys are actually moving there. Your personal life and consumer life has already moved there. But somehow, we all believe that the higher the price the more complexity. Do you know why? Tech guys, pre-sales, vendors, we are all getting paid to maintain complexity. If it is simple, how are the consultants of the world going to make money? How are they going to sell orchestration on top of that if the hypervisor is not even visible and HA is already taken care of?

In part 2 of this interview, Nair expands on his vision of the demise of legacy software in a world that’s not developer-centric. 
Image credit - Freeimages.comRead more on: Cloud platforms - infrastructure and architectureDevOps NoSQL and the open source stack 